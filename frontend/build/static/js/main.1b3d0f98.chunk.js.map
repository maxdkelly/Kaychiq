{"version":3,"sources":["StyleSheets/koreanchicken.jpg","components/Header.js","pages/HomePage.js","utils/general.js","components/JoinGameForm.js","soju/apple.png","soju/grapefruit.png","soju/original.png","soju/peach.png","soju/plum.png","soju/strawberry.png","soju/watermelon.png","soju/lychee.png","components/LobbyView.js","pages/LobbyPage.js","components/CreateGameForm.js","pages/CreateGamePage.js","utils/guess.js","components/GuessGameView.js","components/GuessDialog.js","gifs/gif1.gif","components/GuessFinishedDialog.js","pages/GuessNumberGame.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","history","useHistory","classes","AppBar","position","Toolbar","Typography","variant","className","onClick","push","appBar","layout","width","marginLeft","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","HomePage","Paper","Grid","container","item","xs","style","textAlign","src","kchicken","to","Button","color","username","axios","post","then","res","data","catch","err","console","log","code","token","JoinGameForm","state","gameCode","indToken","gameCreated","handleUsernameChange","bind","handleCodeChange","handleSubmit","event","this","setState","target","value","split","preventDefault","general","joinGame","isValid","gameToken","individualToken","passToken","alert","validMsg","Fragment","gutterBottom","TextField","id","onChange","label","React","Component","height","control","LobbyView","useState","players","setPlayers","setToken","sojuMap","setSojuMap","apple","grapefruit","original","peach","plum","strawberry","watermelon","lychee","sojuToObj","useEffect","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","checkGame","checkGameStarted","link","gameStarted","gameLink","pathname","justify","alignItems","map","player","Card","CardContent","component","Box","fontWeight","m","LobbyPage","location","CreateGameForm","handleChange","handleGuessLink","e","startGuessGame","createGame","disableElevation","CreateGamePage","guess","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","logContainer","backgroundColor","borderRadius","GuessGameView","currPlayer","setCurrPlayer","highest","setHighest","lowest","setLowest","currGuess","setCurrGuess","over","setOver","checked","setChecked","fadeChecked","setFadeChecked","setTimeout","length","class","raised","Fade","in","timeout","Slide","direction","elevation","GuessDialog","show","setShow","guessError","setGuessError","numGuess","setNumGuess","handleGuess","setClosed","Dialog","open","fullWidth","DialogTitle","List","ListItem","defaultValue","helperText","GuessFinishedDialog","loser","setLoser","host","setHost","num","setNum","gif","guessToLobby","GuessNumberGame","loserShow","setLoserShow","setName","isHost","getGuessState","highestGuess","lowestGuess","yourTurn","gameOver","App","exact","path","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1b3d0f98.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/koreanchicken.ff72deb8.jpg\";","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport { useHistory } from 'react-router';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport const Header = props =>  {\n\n  const history = useHistory();\n\n  const classes = useStyles();\n  return (\n    // <div className=\"Title\">\n    //   <h1>Kaychiq</h1>\n    // </div>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title} onClick = {() => history.push(\"/\")}>\n          Kaychiq\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","  \nimport React from \"react\";\nimport kchicken from \"../StyleSheets/koreanchicken.jpg\"\nimport Header from \"../components/Header.js\"\nimport home from \"../StyleSheets/HomePage.css\"\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      \n     \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const HomePage = props => {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Header />\n\n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n\n                    <Grid \n                        container \n                        spacing={6}\n                    >\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <img className= \"pic\" src={kchicken} style={{\"align-self\":\"center\", \"max-width\": \"90%\", \"max-height\": \"100%\", \"border-radius\": \"15px\"}}/> \n                        </Grid>\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <Link to=\"/createGame\" className=\"link\">\n                                <Button\n                                \n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <div className=\"buttonText\">Create Game </div> \n                                </Button>                                                      \n                            </Link>\n                        </Grid>\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <Link to=\"/lobby\" className=\"link\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <div className=\"buttonText\">Join Lobby</div> \n                                </Button>                                                      \n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </main>\n        </div>\n    )\n}","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass General {\n  constructor() {\n    \n  }\n\n  createGame(username) {\n    return axios.post('/api/createGame', {\n      username: username\n    })\n      .then(res => {\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  joinGame(username, code) {\n    return axios.post('/api/joinGame', {\n      username: username,\n      code: code\n    })\n      .then(res => {\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  checkGameStarted(token) {\n    return axios.post('/api/checkGameStarted', {\n        token: token\n      })\n        .then(res => {\n              return res.data;\n        })\n        .catch(err => {\n          console.log(err);\n        })\n\n    }\n\n    startGuessGame(token) {\n        return axios.post('/api/startGuessGame', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n        }\n\n    isHost(token) {\n      return axios.post('/api/isHost', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n      }\n  \n\n  \n\n  \n}\n\nexport default new General();\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass JoinGameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {username: '', gameCode: \"\", indToken: \"\", gameCreated: false};\n  \n      this.handleUsernameChange = this.handleUsernameChange.bind(this);\n      this.handleCodeChange = this.handleCodeChange.bind(this);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleUsernameChange(event) {\n      this.setState({username: event.target.value});\n    }\n\n    handleCodeChange(event) {\n        this.setState({gameCode: event.target.value});\n      }\n\n    componentWillReceiveProps(props) {\n      \n        if(props.token) {\n          this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token});\n        }\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        general.joinGame(this.state.username, this.state.gameCode)\n        .then(data => {\n\n            if(data.isValid) {\n                this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n                this.props.passToken(data.individualToken);\n                console.log(data);\n                this.setState({gameCreated: true});    \n\n            } else {\n                alert(data.validMsg)\n            }\n            \n        })\n\n         \n    }\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n\n          \n            return (\n\n              <React.Fragment  >\n\n                <Typography variant=\"h6\" gutterBottom>\n                Join Game\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleUsernameChange} label=\"Username\" />\n\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField id=\"standard-basic\" value={this.state.gameCode} onChange={this.handleCodeChange} label=\"Game Code\" />\n\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleSubmit}   \n                    >\n                      Submit\n                    </Button>\n\n                  </Grid>\n                </Grid>\n\n              \n              </React.Fragment>      \n              );\n        } else {\n            return (\n\n              <React.Fragment  >\n\n                <div className=\"titleText\"> You have joined game {this.state.gameCode}</div> \n               \n              </React.Fragment> \n                \n              );\n        }\n      \n    }\n  }\n\nexport default JoinGameForm\n","export default __webpack_public_path__ + \"static/media/apple.e6f58345.png\";","export default __webpack_public_path__ + \"static/media/grapefruit.56b4ec34.png\";","export default __webpack_public_path__ + \"static/media/original.7364428a.png\";","export default __webpack_public_path__ + \"static/media/peach.4b3916d7.png\";","export default __webpack_public_path__ + \"static/media/plum.848150eb.png\";","export default __webpack_public_path__ + \"static/media/strawberry.e2f74bfd.png\";","export default __webpack_public_path__ + \"static/media/watermelon.816a1fa5.png\";","export default __webpack_public_path__ + \"static/media/lychee.829c269d.png\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const LobbyView = props => {\n  \n    const [players, setPlayers] = useState([]);\n    const [token, setToken] = useState(props.token)\n    const history = useHistory();\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    const [sojuMap, setSojuMap] = useState({});\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee\n    })\n\n    useEffect(() => {\n\n        if (props.token !== token) {\n            setToken(props.token);        \n        }\n    });\n\n    \n    const startGame = link => {\n        history.push({\n            pathname: \"/\" + link,\n            token:token\n        });\n    }\n\n    useInterval(() => {\n        checkGame()\n    }, 2000);   \n  \n    const soju = name => {\n        if(name == \"Akshin\") {\n            return lychee;\n        }\n\n        return apple;\n    }\n    const checkGame = () => {\n       \n        general.checkGameStarted(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n                    if(data.gameStarted) {\n                        startGame(data.gameLink)\n                    }\n                    setPlayers(data.players)\n                    setSojuMap(data.sojuMap)\n                } else {\n                    console.log(\"Error pinging api\")\n                }\n                \n            })\n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n      }\n\n    return (\n       \n            \n            <React.Fragment  >\n                <Grid container spacing={3}>\n\n                  <Grid item xs={12}>\n                  <div className=\"titleText\">Lobby </div> \n\n                  </Grid>\n                  <Grid item>\n                    <Grid \n                        container \n                        justifyContent=\"center\" \n                        justify = \"center\" \n                        alignItems=\"center\"\n                        spacing={spacing}\n                    >\n                        {players.map((player) => (\n                            \n                                <Card className=\"cardContainer\"  alignItems=\"center\">\n                                    <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                                        <img src={sojuToObj[sojuMap[player]]} width=\"80\" height=\"120\"/>         \n\n                                        <Typography component=\"div\"  justify = \"center\"  alignItems=\"center\">\n                                            <Box fontWeight=\"fontWeightBold\" m={1} style ={{\"text-align\": \"center\"}} >\n                                                {player}\n                                            </Box>\n                                        </Typography>\n                                    \n                                    </CardContent>\n                                </Card>\n                            \n                        ))}\n                    </Grid>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n      \n        \n    );\n\n}\n  \n\nexport default LobbyView\n","import React, { useState, useEffect }  from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport JoinGameForm from \"../components/JoinGameForm\";\nimport LobbyView from \"../components/LobbyView\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport purple from '@material-ui/core/colors/purple';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      \n     \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const LobbyPage = props => {\n\n    const classes = useStyles();\n\n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n  \n    return(\n        <body>\n            <Header/> \n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n                    <JoinGameForm passToken={handleToken} token={token}/>\n                </Paper>\n            </main>\n\n            \n            <main className={token ? classes.layout : \"hidden\"}>\n                <Paper className={classes.paper}> \n                    <LobbyView token={token}/>\n                </Paper>\n            </main>\n        </body>\n    )\n          \n}\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { Link } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass CreateGameForm extends React.Component {\n    constructor(props) {\n\n      \n      super(props);\n\n      console.log(props)\n      if(props.token) {\n        this.state = {username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token};\n\n      } else {\n        this.state = {username: '', gameCreated: false, gameCode: \"\", indToken: \"\"};\n\n      }\n\n      \n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleGuessLink = this.handleGuessLink.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n      \n      if(props.token) {\n        this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token});\n      }\n    }\n  \n    handleGuessLink(e) {\n\n        general.startGuessGame(this.state.indToken)\n        .then(data => {\n            if(!data.isValid) {\n                alert(data.validMsg);\n                e.preventDefault();\n\n            }\n        })\n        console.log(\"hey\");\n    }\n    handleChange(event) {\n      this.setState({username: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"hey\");\n        general.createGame(this.state.username)\n        .then(data => {\n            this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n            this.props.passToken(data.individualToken);\n        })\n\n        this.setState({gameCreated: true});    \n    }\n\n\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n            return (\n\n              <React.Fragment  >\n\n                    <Typography variant=\"h6\" gutterBottom>\n                    Create Game\n                    </Typography>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12}>\n                        <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleChange} label=\"Username\" />\n\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={this.handleSubmit}   \n                        >\n                          Submit\n                        </Button>\n\n                      </Grid>\n                    </Grid>\n\n                    \n                </React.Fragment>\n\n              );\n        } else {\n            return (\n              <React.Fragment  >\n                <Grid container spacing={3}>\n\n                  <Grid item xs={12}>\n                    <div className=\"titleText\">Your game code is {this.state.gameCode} </div> \n                      \n\n                  </Grid>\n                    <Grid item xs={12}>\n                      <Link \n                        to={{pathname: \"/guessNumberGame\",token:this.state.indToken}} \n                        className=\"link\" \n                        onClick={(e) => this.handleGuessLink(e)}\n                      >\n                        <Button variant=\"contained\" color=\"primary\" disableElevation>\n                          <Typography variant=\"button\">\n                              Start Guess Bottle No. Game\n                          </Typography>\n                         \n                        </Button>\n                      </Link>\n\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n                \n              );\n        }\n      \n    }\n  }\n\nexport default CreateGameForm\n\n{/* <Typography variant=\"h6\" gutterBottom>\nCreate Game\n</Typography>\n<Grid container spacing={3}>\n  <Grid item xs={12}>\n    <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleChange} label=\"Username\" />\n\n  </Grid>\n</Grid> */}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport CreateGameForm from \"../components/CreateGameForm\";\nimport LobbyView from \"../components/LobbyView\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport purple from '@material-ui/core/colors/purple';\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      \n     \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const CreateGamePage = props =>{\n    const classes = useStyles();\n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n\n    return(\n        <body>\n            <Header/> \n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n                    <CreateGameForm passToken={handleToken} token={token}/>\n                </Paper>\n            </main>\n\n            <main className={token ? classes.layout : \"hidden\"}>\n                <Paper className={classes.paper}> \n                    <LobbyView token={token}/>\n                </Paper>\n            </main>\n\n        \n        </body>\n    )\n          \n}\n","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass Guess {\n  constructor() {\n    \n  }\n\n\n    getGuessState(token) {\n        return axios.post('/api/getGuessState', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guess(token, guess) {\n        return axios.post('/api/guess', {\n            token: token,\n            guess: guess\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guessToLobby(token) {\n      return axios.post('/api/guessToLobby', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n  }\n  \n\n  \n}\n\nexport default new Guess();\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    }, \n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: \"auto\",\n        maxWidth: \"70%\",\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      \n     \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    log: {\n      paddingTop: '1.5rem',\n      paddingBottom: '1.5rem',\n      paddingLeft: '1rem',\n      paddingRight: '1rem'\n    },\n    logContainer: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: 'fit-content',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      backgroundColor: '#93CAED',\n      borderRadius: 10\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessGameView = props => {\n  \n    const [players, setPlayers] = useState(props.players);\n    const classes = useStyles();\n\n    const [currPlayer, setCurrPlayer] = useState(props.currPlayer);\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [currGuess, setCurrGuess] = useState(props.currGuess);\n    const [sojuMap, setSojuMap] = useState({});\n\n    const [over, setOver] = useState(props.over);\n\n    const [checked, setChecked] = useState(false);\n    const [fadeChecked, setFadeChecked] = useState(false);\n\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee\n    })\n\n    useEffect(() => {\n\n        setPlayers(props.players);\n        setSojuMap(props.sojuMap);\n        setCurrPlayer(props.currPlayer);\n\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        setCurrGuess(props.currGuess);\n\n        setOver(props.over)\n        \n\n        console.log(players)\n\n      }, [props.players, props.sojuMap, props.currPlayer, props.highest, props.lowest, props.over]);\n\n    useEffect(() => {\n\n\n      setFadeChecked(false);\n      setChecked(false);\n\n      setTimeout(function() { //Start the timer\n        setFadeChecked(true);//After 1 second, set render to true\n        setChecked(true);\n      }, 1000)\n\n\n      setCurrGuess(props.currGuess);\n\n    }, [props.currGuess])\n    \n    return (\n        <div>\n\n            <main className={players.length == 0 ? \"hidden\" : classes.layout}>\n                <Paper className={players.length == 0 ? \"hidden\" : classes.paper}> \n                  <div class =\"paperTitleText\" >\n                      Guess The Soju Bottle No.\n                  </div>\n\n                  <div class =\"mutedText\" >\n                      Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n                  </div>\n                  <Grid container  spacing={2}>\n                    {players.map((player) => (\n                              \n                      <Card className=\"cardContainer\" style = {currPlayer == player ? {\"background-color\":\"#b1b1af\"} :  {\"background-color\":\"#dcdcdc\"}} raised = {currPlayer == player ? true : false} >\n                          <CardContent className = \"cardContentContainer\"  >\n                              <img src={sojuToObj[sojuMap[player]]} width=\"80\" height=\"120\"/>         \n                                  <div style = {currPlayer == player ? {\"text-align\": \"center\", \"font-weight\": \"770\"} : {\"text-align\": \"center\", \"font-weight\": \"bold\"}} >\n                                      {player}\n                                  </div>\n                              \n                          \n                          </CardContent>\n                      </Card>\n                          \n                      ))}\n                    \n                \n                    </Grid>\n                </Paper>\n            </main>\n            \n   \n            <Fade in={fadeChecked}  timeout = {1000}>\n            <Slide direction=\"up\" in={checked} timeout = {1000}>\n\n                <Paper className={(currGuess[0] && !over)? classes.logContainer: \"hidden\"} elevation={6}>                  \n                  <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" className = {classes.log} >\n                      {currGuess[1]} guessed {currGuess[0]}, {currGuess[0] == highest ? \" the number is lower\": \"the number is higher\"}\n                  </Box>\n                </Paper>\n\n                </Slide>\n              \n            </Fade>\n            \n           \n                \n            \n\n            \n        </div>\n        \n    );\n\n}\n  \n\nexport default GuessGameView\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessDialog = props => {\n  \n    const classes = useStyles();\n\n    const [token, setToken] = useState(props.token);\n    const [show, setShow] = useState(props.show);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [guessError, setGuessError] = useState(false);\n\n\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [numGuess, setNumGuess] = useState(0);\n  \n\n    useEffect(() => {\n        setToken(props.token);\n        setShow(props.show);\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        \n      \n      }, [props.token, props.highest, props.lowest, props.show]);\n\n    function handleGuess(e) {\n        e.preventDefault();\n        \n        console.log(numGuess);\n\n        if(numGuess >= highest || numGuess <= lowest) {\n            setGuessError(true);\n        } else {\n            setGuessError(false);\n            props.setClosed();\n            setNumGuess(null)\n            handleClose();\n            guess.guess(token, numGuess)\n            .then(data => {\n            })\n            \n        }\n    }\n    \n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#626f87\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n        <div className=\"medButtonText\">Enter your Guess</div> \n        </DialogTitle>\n\n        <List>\n      \n          <ListItem>\n            <TextField \n              id={guessError ? \"standard-error-helper-text\" : \"standard-basic\"} \n              value ={numGuess} \n              onChange={e => setNumGuess(e.target.value)} \n              label={guessError ? \"Error\" : \"Guess\"} \n              defaultValue=\"\"\n              helperText={guessError ? \"Please pick a number in between the lowest and highest guesses\" : \"\"}\n            />\n          </ListItem>\n\n          <ListItem>\n            <Typography variant = \"caption\">\n              Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n            </Typography>\n          </ListItem>\n\n          \n          \n        </List>\n          <Button style = {{\"background-color\": \"#3D3D90\",\"align-self\":\"center\", \"max-width\": \"90%\", \"margin-bottom\":\"0.2rem\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => handleGuess(e)} \n              >\n                  <div className=\"smallButtonText\">Submit</div> \n        </Button>\n        \n\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessDialog\n","export default __webpack_public_path__ + \"static/media/gif1.c0a77e8d.gif\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport gif from '../gifs/gif1.gif'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessFinishedDialog = props => {\n  \n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const [token, setToken] = useState(props.token);\n    const [show, setShow] = useState(props.show);\n    const [loser, setLoser] = useState(props.loser);\n    const [host, setHost] = useState(props.host)\n\n    const [num, setNum] = useState(props.num);\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n    useEffect(() => {\n        setToken(props.token);\n        setShow(props.show);\n        setLoser(props.loser);\n        setHost(props.host);\n        setNum(props.num);\n        \n      \n      }, [props.token, props.loser, props.show, props.host, props.num]);\n\n    \n    function handleBackToLobby(e) {\n\n        guess.guessToLobby(token)\n        .then(\n            history.push({\n                pathname: \"/createGame\" ,\n                token:token\n            })\n        )\n        \n    }\n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#626f87\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n        <div className=\"medButtonText\">Drinking Time!</div> \n        </DialogTitle>\n\n        <List>\n      \n            <ListItem>\n                <div className = \"dialogText\" >\n                    {loser} guessed the correct number ({num}) and must drink!\n                </div> \n            \n            </ListItem>\n          \n\n\n        \n        </List>\n\n        <img style = {{\"align-self\":\"center\", \"margin-bottom\":\"1rem\"}} src={gif}/>  \n        <Button style = {host ? {\"background-color\": \"#3D3D90\",\"align-self\":\"center\", \"max-width\": \"90%\", \"margin-bottom\":\"0.4rem\"} : \n            {\"display\":\"none\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => handleBackToLobby(e)} \n              >\n                  <div className=\"smallButtonText\">Back To Lobby</div> \n        </Button>\n         \n        \n       \n\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessFinishedDialog\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nimport Header from \"../components/Header\"\nimport guess from '../utils/guess';\nimport general from '../utils/general';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport GuessGameView from '../components/GuessGameView';\nimport GuessDialog from '../components/GuessDialog';\nimport GuessFinishedDialog from '../components/GuessFinishedDialog';\n\n\nexport const GuessNumberGame = props => {\n\n    const history = useHistory();\n\n    const [token, setToken] = useState(props.location.token);\n    const [show, setShow] = useState(false);\n    const [loserShow, setLoserShow] = useState(false);\n    const [loser, setLoser] = useState(\"\");\n\n    const [host, setHost] = useState(false);\n\n    const [name, setName] = useState(\"\");\n\n    const [highest, setHighest] = useState(100);\n    const [lowest, setLowest] = useState(0);\n  \n    const [currGuess, setCurrGuess] = useState([0, \"\"]);\n\n    const [players, setPlayers] = useState([]);\n    const [sojuMap, setSojuMap] = useState({});\n    const [currPlayer, setCurrPlayer] = useState(\"\");\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    useEffect(() => {\n\n        if(token) {\n            setName(token.split(\"_\")[1])\n        }\n\n        general.isHost(token) \n        .then(data => {\n\n            if(data) {\n                if(data.isHost) {\n                    setHost(true);\n                }\n            } else {\n                console.log(\"error pinging api\")\n            }\n            \n        })\n      }, []);\n\n    useInterval(() => {\n        checkGame()\n    }, 1000);   \n  \n    const checkGame = () => {\n       \n        guess.getGuessState(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n\n                    if(data.currGuess != currGuess[0]) {\n                        setCurrGuess([data.currGuess, currPlayer]);\n                    }\n\n                    console.log(currGuess);\n                    setHighest(data.highestGuess);\n                    setLowest(data.lowestGuess);\n\n                    setPlayers(data.players);\n                   \n                    \n                    setCurrPlayer(data.currPlayer);\n\n                    setSojuMap(data.sojuMap);\n                    if(data.yourTurn && !data.gameOver) {\n                        console.log(\"hey\");\n                        handleShow();\n                    }\n\n                    if(data.gameOver) {\n                        setLoser(data.currPlayer);\n                        setLoserShow(true);\n                    }\n\n                    if(data.link) {\n                        history.push({\n                            pathname: \"/\" + data.link,\n                            token:token\n                        });\n\n                    }\n                } else {\n                    console.log(\"error pinging api\")\n                }\n\n            })\n                \n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n \n\n    \n    return(\n        <body>\n            <Header/> \n            \n\n            <GuessGameView players = {players} sojuMap = {sojuMap} currPlayer = {currPlayer} highest = {highest} lowest = {lowest} currGuess = {currGuess} over = {loserShow}/>\n            <GuessDialog show = {show} token = {token} highest = {highest} lowest = {lowest} setClosed = {handleClose}/>\n            <GuessFinishedDialog show = {loserShow} loser = {loser} num = {currGuess[0]} host = {host} token = {token} />\n\n           \n        </body>\n    )\n        \n    \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport './index.css';\nimport { HomePage } from \"./pages/HomePage\";\nimport  {LobbyPage}  from \"./pages/LobbyPage\";\nimport  {CreateGamePage}  from \"./pages/CreateGamePage\";\n\nimport  {GuessNumberGame}  from \"./pages/GuessNumberGame\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/lobby\" component={LobbyPage} />\n        <Route exact path=\"/createGame\" component={CreateGamePage} />\n\n        <Route exact path=\"/guessNumberGame\" component={GuessNumberGame} />\n\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}