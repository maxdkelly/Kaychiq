{"version":3,"sources":["StyleSheets/koreanchicken.jpg","utils/general.js","components/Header.js","pages/HomePage.js","components/JoinGameForm.js","soju/apple.png","soju/grapefruit.png","soju/original.png","soju/peach.png","soju/plum.png","soju/strawberry.png","soju/watermelon.png","soju/lychee.png","soju/chicken.png","components/LobbyView.js","pages/LobbyPage.js","components/CreateGameForm.js","pages/CreateGamePage.js","utils/guess.js","components/GuessGameRules.js","components/GuessGameView.js","components/GuessDialog.js","gifs/gif1.gif","components/GuessFinishedDialog.js","pages/GuessNumberGame.js","utils/flick.js","components/FlickGameView.js","pages/FlickGame.js","utils/blackout.js","pages/Blackout.js","index.js"],"names":["Cookies","get","console","log","undefined","remove","username","axios","post","then","res","data","isValid","set","individualToken","expires","catch","err","code","token","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","history","useHistory","classes","AppBar","position","Toolbar","Typography","variant","className","onClick","push","general","hasToken","Button","color","leaveGame","getToken","removeToken","window","location","reload","appBar","layout","width","marginLeft","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","HomePage","Paper","Grid","container","item","xs","style","textAlign","src","kchicken","to","JoinGameForm","state","gameCode","indToken","gameCreated","errorMsg","handleUsernameChange","bind","handleCodeChange","handleSubmit","event","this","setState","target","value","split","preventDefault","joinGame","gameToken","passToken","validMsg","Fragment","gutterBottom","TextField","id","onChange","helperText","label","React","Component","getWindowDimensions","innerWidth","height","innerHeight","control","image","flex","resizeMode","cardText","LobbyView","useState","players","setPlayers","setToken","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","sojuMap","setSojuMap","apple","grapefruit","original","peach","plum","strawberry","watermelon","lychee","chicken","sojuToObj","checkGame","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","checkGameStarted","link","gameStarted","gameLink","pathname","getIconSize","relSize","Math","max","justify","alignItems","paddingTop","map","player","Card","CardContent","maxWidth","LobbyPage","paddingBottom","CreateGameForm","cookies_token","handleChange","handleGuessLink","e","startGuessGame","alert","startFlickGame","startBlackout","createGame","navigator","clipboard","writeText","handleFlickLink","handleBlackoutLink","backgroundColor","borderRadius","CreateGamePage","isHost","guess","GuessGameRules","show","setShow","Dialog","open","fullWidth","DialogTitle","List","ListItem","handleClose","paddingLeft","paddingRight","logContainer","GuessGameView","rulesShow","setRulesShow","currPlayer","setCurrPlayer","highest","setHighest","lowest","setLowest","currGuess","setCurrGuess","over","setOver","checked","setChecked","fadeChecked","setFadeChecked","setTimeout","length","class","raised","direction","Fade","in","timeout","Slide","elevation","Box","fontWeight","m","GuessDialog","guessError","setGuessError","numGuess","setNumGuess","handleGuess","setClosed","defaultValue","GuessFinishedDialog","loser","setLoser","host","setHost","num","setNum","gif","guessToLobby","GuessNumberGame","loserShow","setLoserShow","setName","recentlyClosed","setRecClosed","getGuessState","highestGuess","lowestGuess","yourTurn","gameOver","FlickGameView","FlickGame","currHit","setCurrHit","hitRange","setHitRange","maxHitPos","setMaxHitPos","tick","setTick","flick","getFlickState","currHitPos","Blackout","message","setMessage","blackout","testBlackout","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b234d221.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/koreanchicken.ff72deb8.jpg\";","import axios from \"axios\";\nimport Cookies from 'js-cookie';\n\nclass General {\n  constructor() {\n    \n  }\n\n  getToken() {\n    return Cookies.get('token')\n  }\n\n  hasToken() {\n\n    console.log(Cookies.get('token'));\n    return Cookies.get('token') != undefined;\n  }\n\n  removeToken() {\n    Cookies.remove('token');\n  }\n\n  createGame(username) {\n    return axios.post('/api/createGame', {\n      username: username\n    })\n      .then(res => {\n           \n            if(res.data.isValid) {\n              Cookies.set('token', res.data.individualToken, { expires: 1 })\n           \n            }\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  joinGame(username, code) {\n    return axios.post('/api/joinGame', {\n      username: username,\n      code: code\n    })\n      .then(res => {\n\n            if(res.data.isValid) {\n              Cookies.set('token', res.data.individualToken, { expires: 1 })\n            }\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  checkGameStarted(token) {\n    return axios.post('/api/checkGameStarted', {\n        token: token\n      })\n        .then(res => {\n              return res.data;\n        })\n        .catch(err => {\n          console.log(err);\n        })\n\n    }\n\n    startGuessGame(token) {\n        return axios.post('/api/startGuessGame', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n      }\n\n    startFlickGame(token) {\n      return axios.post('/api/startFlickGame', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n      }\n\n      startBlackout(token) {\n        return axios.post('/api/startBlackout', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n        }\n\n    isHost(token) {\n      return axios.post('/api/isHost', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n      }\n\n     leaveGame(token) {\n      return axios.post('/api/leaveGame', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n      }\n  \n\n  \n\n  \n}\n\nexport default new General();\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport { useHistory } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport general from '../utils/general';\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\n\n\nexport const Header = props =>  {\n\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const handleClick = () => {\n\n    \n    general.leaveGame(general.getToken());\n    console.log('hey')\n   \n    general.removeToken();\n    window.location.reload();\n  }\n\n\n  return (\n    // <div className=\"Title\">\n    //   <h1>Kaychiq</h1>\n    // </div>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title} onClick = {() => history.push(\"/\")}>\n          Kaychiq\n        </Typography>\n        <div className = {general.hasToken() ? \"\" : \"hidden\"}>\n          <Button  color=\"inherit\" onClick = {() => handleClick()}>Leave Game</Button>\n\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","  \nimport React from \"react\";\nimport kchicken from \"../StyleSheets/koreanchicken.jpg\"\nimport Header from \"../components/Header.js\"\nimport home from \"../StyleSheets/HomePage.css\"\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      \n     \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const HomePage = props => {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Header />\n\n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n\n                    <Grid \n                        container \n                        spacing={6}\n                    >\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <img className= \"pic\" src={kchicken} style={{\"align-self\":\"center\", \"max-width\": \"90%\", \"max-height\": \"100%\", \"border-radius\": \"15px\"}}/> \n                        </Grid>\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <Link to=\"/createGame\" className=\"link\">\n                                <Button\n                                \n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <div className=\"buttonText\">Create Game </div> \n                                </Button>                                                      \n                            </Link>\n                        </Grid>\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <Link to=\"/lobby\" className=\"link\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <div className=\"buttonText\">Join Lobby</div> \n                                </Button>                                                      \n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </main>\n        </div>\n    )\n}","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass JoinGameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      \n      this.state = {username: '', gameCode: \"\", indToken: \"\", gameCreated: false, errorMsg : \"\"};\n  \n      this.handleUsernameChange = this.handleUsernameChange.bind(this);\n      this.handleCodeChange = this.handleCodeChange.bind(this);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleUsernameChange(event) {\n      this.setState({username: event.target.value});\n    }\n\n    handleCodeChange(event) {\n        this.setState({gameCode: event.target.value});\n      }\n\n    componentWillReceiveProps(props) {\n      \n        if(props.token) {\n          this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token, errorMsg : \"\"});\n        }\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        general.joinGame(this.state.username, this.state.gameCode)\n        .then(data => {\n\n            if(data.isValid) {\n                this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n                this.props.passToken(data.individualToken);\n                console.log(data);\n                this.setState({gameCreated: true});    \n\n            } else {\n              this.setState({errorMsg: data.validMsg});\n            }\n            \n        })\n\n         \n    }\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n\n          \n            return (\n\n              <React.Fragment  >\n\n                <Typography variant=\"h6\" gutterBottom>\n                Join Game\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                  <TextField \n                        id={this.state.errorMsg == \"\" ? \"standard-basic\" : \"standard-error-helper-text\"}\n                        value={this.state.username} \n                        onChange={this.handleUsernameChange} \n                        helperText={this.state.errorMsg}\n                        label=\"Username\" \n                        />\n                    {/* <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleUsernameChange} label=\"Username\" /> */}\n\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField id=\"standard-basic\" value={this.state.gameCode} onChange={this.handleCodeChange} label=\"Game Code\" />\n\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleSubmit}   \n                    >\n                      Submit\n                    </Button>\n\n                  </Grid>\n                </Grid>\n\n              \n              </React.Fragment>      \n              );\n        } else {\n            return (\n\n              <React.Fragment  >\n\n                <div className=\"titleText\"> You have joined game {this.state.gameCode}</div> \n               \n              </React.Fragment> \n                \n              );\n        }\n      \n    }\n  }\n\nexport default JoinGameForm\n","export default __webpack_public_path__ + \"static/media/apple.e6f58345.png\";","export default __webpack_public_path__ + \"static/media/grapefruit.56b4ec34.png\";","export default __webpack_public_path__ + \"static/media/original.7364428a.png\";","export default __webpack_public_path__ + \"static/media/peach.4b3916d7.png\";","export default __webpack_public_path__ + \"static/media/plum.848150eb.png\";","export default __webpack_public_path__ + \"static/media/strawberry.e2f74bfd.png\";","export default __webpack_public_path__ + \"static/media/watermelon.816a1fa5.png\";","export default __webpack_public_path__ + \"static/media/lychee.829c269d.png\";","export default __webpack_public_path__ + \"static/media/chicken.73dbedde.png\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\nimport chicken from '../soju/chicken.png'\n\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n  \n  function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  \n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    image: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'contain'\n    },\n    cardText: {\n        \"max-width\": \"80\",\n        \"font-size\": \"medium\",\n        \"font-weight\": \"bold\",\n        \"text-decoration\": \"none\",\n        \"text-align\" : \"center\",\n        \"word-wrap\": \"break-word\",\n    \n        \"margin\": \"0.1rem\",\n        \"color\": \"#293242\"\n    }\n  }));\n\nexport const LobbyView = props => {\n  \n    const [players, setPlayers] = useState([]);\n    const [token, setToken] = useState(props.token)\n    const history = useHistory();\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n    \n    const { height, width } = useWindowDimensions();\n\n    const [sojuMap, setSojuMap] = useState({});\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee,\n        'chicken': chicken\n\n    })\n\n    useEffect(() => {\n\n        if (props.token !== token) {\n            setToken(props.token);        \n        }\n       \n    });\n\n    useEffect(() => {\n        checkGame();\n    }\n    ,[])\n\n    \n    const startGame = link => {\n        history.push({\n            pathname: \"/\" + link,\n            token:token\n        });\n    }\n\n    useInterval(() => {\n        checkGame()\n    }, 2000);   \n  \n    const soju = name => {\n        if(name == \"Akshin\") {\n            return lychee;\n        }\n\n        return apple;\n    }\n    const checkGame = () => {\n\n        console.log(width)\n       \n        general.checkGameStarted(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n                    if(data.gameStarted) {\n                        startGame(data.gameLink)\n                    }\n                    setPlayers(data.players)\n                    setSojuMap(data.sojuMap)\n                } else {\n                    console.log(\"Error pinging api\")\n                }\n                \n            })\n    };\n\n    const getIconSize = relSize => {\n\n        return Math.max(relSize/2.3, relSize * width/1920 )\n\n    }\n\n    const getFontSize = () => {\n\n        if(width > 1400) {\n            return \"medium\"\n        }\n\n        if(width > 1000) {\n            return \"small\"\n        }\n\n        if(width > 700) {\n            return \"x-small\"\n        }\n\n        return \"xx-small\"\n    }\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n      }\n\n    return (          \n        <Grid \n            container \n            justifyContent=\"center\" \n            justify = \"center\" \n            alignItems=\"center\"\n            spacing={5}\n            marginTop={50}\n            marginBottom={50}\n            paddingTop = '1.5rem'\n        >\n            {players.map((player) => (\n                \n                    <Card className = \"cardContainer\">\n                        <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                            <img src={sojuToObj[sojuMap[player]]} width={getIconSize(80)} height={getIconSize(120)} />         \n\n                            <div style = {{\n                                \"max-width\": getIconSize(80),\n                                \"font-size\": getFontSize(),\n                                \"font-weight\": \"bold\",\n                                \"text-decoration\": \"none\",\n                                \"text-align\" : \"center\", \n                                \"vertical-align\": \"middle\",\n                                \"color\": \"#293242\",\n                                \"word-wrap\": \"break-word\"\n                            }}>\n\n\n                                {player}\n                            </div>  \n                        \n                        </CardContent>\n                    </Card>\n                \n            ))}\n        </Grid>\n         \n      \n        \n    );\n\n}\n  \n\nexport default LobbyView\n","import React, { useState, useEffect }  from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport JoinGameForm from \"../components/JoinGameForm\";\nimport LobbyView from \"../components/LobbyView\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport general from \"../utils/general\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n        width: 'fit-content',\n        maxWidth: \"90%\",\n        marginLeft: 'auto',\n        marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const LobbyPage = props => {\n\n    const classes = useStyles();\n\n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n\n        else if(general.hasToken()) {\n            setToken(general.getToken());\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n  \n    return(\n        <body>\n            <Header/> \n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n                    <JoinGameForm passToken={handleToken} token={token}/>\n                </Paper>\n            </main>\n\n            \n            <main className={token ? classes.layout : \"hidden\"}>\n                <Paper className={classes.paper}> \n                    <Grid container spacing={3}   paddingBottom = '5rem'>\n\n                        <Grid item xs={12}>\n                          \n                            <div className=\"titleText\">Lobby </div>  \n\n                        </Grid>\n  \n                    </Grid>\n                    <LobbyView token={token}/>\n                </Paper>\n            </main>\n        </body>\n    )\n          \n}\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { Link } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass CreateGameForm extends React.Component {\n    constructor(props) {\n\n      \n      super(props);\n\n      console.log(props)\n      \n      const cookies_token = general.getToken();\n      if(props.token) {\n        this.state = {username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token, errorMsg : \"\"};\n\n      } else if(general.hasToken()) {\n        \n        this.state = {username: cookies_token.split('_')[1], gameCreated: true, gameCode: cookies_token.split('_')[0], indToken:  cookies_token, errorMsg : \"\"};\n\n      } else {\n        this.state = {username: '', gameCreated: false, gameCode: \"\", indToken: \"\", errorMsg : \"\"};\n\n      }\n\n      \n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleGuessLink = this.handleGuessLink.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n      \n      if(props.token) {\n        this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token, errorMsg : \"\"});\n      }\n    }\n  \n    handleGuessLink(e) {\n\n        general.startGuessGame(this.state.indToken)\n        .then(data => {\n            if(!data.isValid) {\n                alert(data.validMsg);\n                e.preventDefault();\n\n            }\n        })\n        console.log(\"hey\");\n    }\n\n    handleFlickLink(e) {\n\n      general.startFlickGame(this.state.indToken)\n      .then(data => {\n          if(!data.isValid) {\n              alert(data.validMsg);\n              e.preventDefault();\n\n          }\n      })\n      console.log(\"hey\");\n\n\n    }\n\n\n    handleBlackoutLink(e) {\n\n      general.startBlackout(this.state.indToken)\n      .then(data => {\n          if(!data.isValid) {\n              alert(data.validMsg);\n              e.preventDefault();\n\n          }\n      })\n      console.log(\"hey\");\n    }\n\n    handleChange(event) {\n      this.setState({username: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"hey\");\n        general.createGame(this.state.username)\n        .then(data => {\n\n            if(data.isValid) {\n              this.setState({errorMsg: \"\"});\n              \n              this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n              this.props.passToken(data.individualToken);\n              this.setState({gameCreated: true}); \n\n            } else {\n              this.setState({errorMsg: data.validMsg});\n            }\n            \n        })\n\n           \n    }\n\n\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n            return (\n\n              <React.Fragment  >\n\n                    <Typography variant=\"h6\" gutterBottom>\n                    Create Game\n                    </Typography>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12}>\n                        <TextField \n                        id={this.state.errorMsg == \"\" ? \"standard-basic\" : \"standard-error-helper-text\"}\n                        value={this.state.username} \n                        onChange={this.handleChange} \n                        helperText={this.state.errorMsg}\n                        label=\"Username\" \n                        />\n\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={this.handleSubmit}   \n                        >\n                          Submit\n                        </Button>\n\n                      </Grid>\n                    </Grid>\n\n                    \n                </React.Fragment>\n\n              );\n        } else {\n            return (\n              <React.Fragment  >\n                 <Grid container spacing={3} justifyContent = \"flex-end\">\n                  <Grid item xs style = {{\"max-width\" : \"27%\"}}>\n                    <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                          onClick={() => {navigator.clipboard.writeText(this.state.gameCode)}}\n                        >\n                              <div className = \"smallText\">\n                                Copy Game Code\n\n                              </div>\n                          \n                         \n                        </Button>\n                  </Grid>\n                 \n                </Grid>\n                <Grid container spacing={3}>\n\n                  <Grid item xs={12}>\n                    <div className=\"titleText\">Your game code is {this.state.gameCode} </div> \n                      \n\n                  </Grid>\n                    <Grid item xs={12}>\n                      <Link \n                        to={{pathname: \"/guessNumberGame\",token:this.state.indToken}} \n                        className=\"link\" \n                        onClick={(e) => this.handleGuessLink(e)}\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                        >\n                          <Typography variant=\"button\">\n                              Start Guess Bottle No. Game\n                          </Typography>\n                         \n                        </Button>\n                      </Link>\n\n\n                      <Link \n                        to={{pathname: \"/flickGame\",token:this.state.indToken}} \n                        className=\"link\" \n                        onClick={(e) => this.handleFlickLink(e)}\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                        >\n                          <Typography variant=\"button\">\n                              Start Flick the Soju Bottle Cap Game\n                          </Typography>\n                         \n                        </Button>\n                      </Link>\n\n                      <Link \n                        to={{pathname: \"/blackout\",token:this.state.indToken}} \n                        className=\"link\" \n                        onClick={(e) => this.handleBlackoutLink(e)}\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                        >\n                          <Typography variant=\"button\">\n                              Start Blackout\n                          </Typography>\n                         \n                        </Button>\n                      </Link>\n\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n                \n              );\n        }\n      \n    }\n  }\n\nexport default CreateGameForm\n\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport CreateGameForm from \"../components/CreateGameForm\";\nimport LobbyView from \"../components/LobbyView\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport { useHistory } from \"react-router-dom\";\n\n\nimport purple from '@material-ui/core/colors/purple';\nimport general from \"../utils/general\";\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n        width: 'fit-content',\n        maxWidth: \"90%\",\n        marginLeft: 'auto',\n        marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: '1.5rem',\n      width: 'fit-content',\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const CreateGamePage = props =>{\n    const classes = useStyles();\n    const [token, setToken] = useState(\"\");\n    const history = useHistory();\n\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n\n        \n\n        if(general.hasToken()) {\n          general.isHost(general.getToken())\n          .then(data => {\n            if(!data.isHost) {\n              history.push(\"/lobby\");\n            }\n          })\n\n\n        \n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n\n    return(\n        <body>\n            <Header/> \n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n                    <CreateGameForm passToken={handleToken} token={token}/>\n                </Paper>\n            </main>\n\n            <main className={token ? classes.layout : \"hidden\"}>\n                <Paper className={classes.paper}>\n                    <Grid container spacing={3}   paddingBottom = '5rem'>\n\n                        <Grid item xs={12}>\n                          \n                            <div className=\"titleText\">Lobby </div>  \n\n                        </Grid>\n  \n                    </Grid>\n                    \n                    <LobbyView token={token}/>\n                </Paper>\n            </main>\n\n        \n        </body>\n    )\n          \n}\n","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass Guess {\n  constructor() {\n    \n  }\n\n\n    getGuessState(token) {\n        return axios.post('/api/getGuessState', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guess(token, guess) {\n        return axios.post('/api/guess', {\n            token: token,\n            guess: guess\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guessToLobby(token) {\n      return axios.post('/api/guessToLobby', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n  }\n  \n\n  \n}\n\nexport default new Guess();\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessGameRules = props => {\n  \n    const classes = useStyles();\n\n   \n    const [show, setShow] = useState(props.show);\n\n    const handleClose = () => {\n        props.handleClose();\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n    const [guessError, setGuessError] = useState(false);\n\n  \n\n    useEffect(() => {\n        \n        setShow(props.show);\n       \n        \n      \n      }, [props.show]);\n\n   \n    \n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#626f87\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n          \n        <Grid style={{\"max-height\":\"10%\"}} container spacing={3} justifyContent = \"flex-end\">\n                  <Grid item xs style = {{\"max-width\" : \"100%\"}}>\n                   <div className=\"medButtonText\">Guess The Soju Bottle No. Rules</div>\n                  </Grid>\n\n        </Grid>\n        \n        </DialogTitle>\n\n        <List>\n      \n          <ListItem>\n           \n            <Typography variant = \"h5\">\n              Rules\n            </Typography>\n          </ListItem>\n          <ListItem>\n          <Typography variant = \"body2\">\n             In 'Guess The Soju Bottle No.' you take turns to guess what the number under the virutal Soju bottle cap is. The number under the virutal Soju bottle cap is between 0 and 100.\n             <br/> <br/>\n             Each guess you make must be within the previous highest and lowest guesses. If you make an incorrect guess the computer will tell you whether the number is higher or lower and update the previous higher or lower guess.\n             <br/> <br/>\n             If you make a correct guess you drink!\n            </Typography>\n          </ListItem>\n\n          \n          \n        </List>\n\n         \n          <Button style = {{\"background-color\": \"#3D3D90\",\"align-self\":\"center\", \"max-width\": \"90%\", \"margin-bottom\":\"0.2rem\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleClose()} \n              >\n                  <div className=\"smallButtonText\">Close</div> \n            </Button>\n          \n        \n\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessGameRules\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\n\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport GuessGameRules from './GuessGameRules';\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\nimport chicken from '../soju/chicken.png'\n\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    }, \n    layout: {\n      width: 'fit-content',\n      maxWidth: \"90%\",\n      marginLeft: 'auto',\n      marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    log: {\n      paddingTop: '1.5rem',\n      paddingBottom: '1.5rem',\n      paddingLeft: '1rem',\n      paddingRight: '1rem'\n    },\n    logContainer: {\n      maxWidth: \"90%\",\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: 'fit-content',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      backgroundColor: '#93CAED',\n      borderRadius: 10\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessGameView = props => {\n  \n    const [players, setPlayers] = useState(props.players);\n    const classes = useStyles();\n    const [rulesShow, setRulesShow] = useState(false);\n    const handleRulesClose = () => setRulesShow(false);\n\n\n    const [currPlayer, setCurrPlayer] = useState(props.currPlayer);\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [currGuess, setCurrGuess] = useState(props.currGuess);\n    const [sojuMap, setSojuMap] = useState({});\n\n    const [over, setOver] = useState(props.over);\n    const [show, setShow] = useState(props.show)\n\n    const [checked, setChecked] = useState(false);\n    const [fadeChecked, setFadeChecked] = useState(false);\n\n    const { height, width } = useWindowDimensions();\n\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee,\n        'chicken': chicken\n    })\n\n    useEffect(() => {\n\n        setPlayers(props.players);\n        setSojuMap(props.sojuMap);\n        setCurrPlayer(props.currPlayer);\n\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        setCurrGuess(props.currGuess);\n\n        setOver(props.over)\n        setShow(props.show);\n        \n\n        console.log(players)\n\n      }, [props.players, props.sojuMap, props.currPlayer, props.highest, props.lowest, props.over, props.show]);\n\n    useEffect(() => {\n\n\n      setFadeChecked(false);\n      setChecked(false);\n\n      setTimeout(function() { //Start the timer\n        setFadeChecked(true);//After 1 second, set render to true\n        setChecked(true);\n      }, 1000)\n\n\n      setCurrGuess(props.currGuess);\n\n    }, [props.currGuess])\n\n    const getIconSize = relSize => {\n\n      return Math.max(relSize/2.1, relSize * width/1920 )\n\n    }\n\n    const getFontSize = () => {\n\n        if(width > 1400) {\n            return \"medium\"\n        }\n\n        if(width > 1000) {\n            return \"small\"\n        }\n\n        if(width > 700) {\n            return \"x-small\"\n        }\n\n        return \"xx-small\"\n    }\n    \n    const getCurrFontSize = () => {\n\n      if(width > 1600) {\n          return \"medium\"\n      }\n\n      if(width > 1400) {\n          return \"small\"\n      }\n\n      if(width > 900) {\n          return \"x-small\"\n      }\n\n      return \"xx-small\"\n  }\n    return (\n        <div>\n\n            <main className={players.length == 0 ? \"hidden\" : classes.layout}>\n                <Paper className={players.length == 0 ? \"hidden\" : classes.paper}> \n\n                <Grid container spacing={3} justifyContent = \"flex-end\">\n                  <Grid item xs style = {{\"max-width\" : \"32%\"}}>\n                    <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                          onClick = {() => setRulesShow(true)}\n                         \n                        >\n                              <div className = \"smallText\">\n                               Rules\n\n                              </div>\n                          \n                         \n                        </Button>\n                    </Grid>\n                  </Grid>\n\n                  <div class =\"paperTitleText\" >\n                      Guess The Soju Bottle No.\n                  </div>\n\n                  <div class =\"mutedText\" >\n                      Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n                  </div>\n                  <Grid container  \n                    spacing={2} \n                    alignItems=\"center\"\n                    justifyContent=\"center\" \n                    justify = \"center\"\n                  >\n                    {players.map((player) => (\n                        \n                      <div>\n                          <Card className=\"cardContainer\" style = {currPlayer == player ? {\"background-color\":\"#b1b1af\"} :  {\"background-color\":\"#dcdcdc\"}} raised = {currPlayer == player ? true : false} >\n                            <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                              <img src={sojuToObj[sojuMap[player]]} width={getIconSize(80)} height={getIconSize(120)} />         \n\n                              <div style = {{\n                                  \"max-width\": getIconSize(80),\n                                  \"font-size\": getFontSize(),\n                                  \"font-weight\": \"bold\",\n                                  \"text-decoration\": \"none\",\n                                  \"text-align\" : \"center\", \n                                  \"vertical-align\": \"middle\",\n                                  \"color\": \"#293242\",\n                                  \"word-wrap\": \"break-word\",\n                                  \"line-height\": \"110%\"\n                              }}>\n\n\n                                  {player}\n                              </div>  \n                                      \n                            </CardContent>\n                        </Card>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" spacing={0.1}  style = {player == currPlayer ? {\n                                 \n                                 \"grid-gap\": \"0px 1px\" } : {\"display\":\"none\"}}>\n                          <Grid item>\n                            <ArrowDropUpIcon/>\n                          </Grid>\n                          <Grid item>\n\n                          <div style = {player == currPlayer ? {\n                                  \"max-width\": getIconSize(80),\n                                  \"font-size\": getCurrFontSize(),\n                                  \"font-weight\": \"bold\",\n                                  \"text-decoration\": \"none\",\n                                  \"text-align\" : \"center\", \n                                  \"vertical-align\": \"middle\",\n                                  \"color\": \"#293242\",\n                                  \"word-wrap\": \"break-word\",\n                                  \"line-height\": \"110%\",\n                                  \"padding-bottom\" : \"1rem\"\n                              } : {\"display\":\"none\"}}>\n\n\n                                Current player\n                              </div>  \n                           \n                          </Grid>\n                        </Grid>\n\n                      \n\n                        \n\n                      </div>\n                      \n                          \n                      ))}\n                    \n                \n                    </Grid>\n                </Paper>\n            </main>\n            \n   \n            <Fade in={fadeChecked}  timeout = {1000}>\n            <Slide direction=\"up\" in={checked} timeout = {1000}>\n\n                <Paper className={(currGuess[0] && !over)? classes.logContainer: \"hidden\"} elevation={6}>                  \n                  <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" className = {classes.log} >\n                      {currGuess[1]} guessed {currGuess[0]}, {currGuess[0] == highest ? \" the number is lower\": \"the number is higher\"}\n                  </Box>\n                </Paper>\n\n                </Slide>\n              \n            </Fade>\n            \n           \n                \n            \n            <GuessGameRules show = {rulesShow} handleClose = {handleRulesClose}/>\n\n            \n        </div>\n        \n    );\n\n}\n  \n\nexport default GuessGameView\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport GuessGameRules from './GuessGameRules';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessDialog = props => {\n  \n    const classes = useStyles();\n\n    const [token, setToken] = useState(props.token);\n    const [show, setShow] = useState(props.show);\n    const [rulesShow, setRulesShow] = useState(false);\n\n\n    \n    const handleRulesClose = () => setRulesShow(false);\n    \n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [guessError, setGuessError] = useState(false);\n\n\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [numGuess, setNumGuess] = useState(0);\n  \n\n    useEffect(() => {\n        setToken(props.token);\n        setShow(props.show);\n        setHighest(props.highest);\n        setLowest(props.lowest);\n\n      \n      }, [props.token, props.highest, props.lowest, props.show]);\n\n    function handleGuess(e) {\n        e.preventDefault();\n        \n        console.log(numGuess);\n\n        if(numGuess >= highest || numGuess <= lowest) {\n            setGuessError(true);\n        } else {\n            setGuessError(false);\n            props.setClosed();\n            setNumGuess(null)\n            handleClose();\n            guess.guess(token, numGuess)\n            .then(data => {\n            })\n            \n        }\n    }\n    \n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#626f87\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n          \n        <Grid style={{\"max-height\":\"10%\"}} container spacing={3} justifyContent = \"flex-end\">\n                  <Grid item xs style = {{\"max-width\" : \"80%\"}}>\n                   <div className=\"medButtonText\">Enter your Guess</div>\n                  </Grid>\n\n                  <Grid item xs style = {{\"max-width\" : \"28%\"}}>\n                    <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                          onClick = {() => setRulesShow(true)}\n                         \n                        >\n                              <div className = \"smallText\">\n                               Rules\n\n                              </div>\n                          \n                         \n                        </Button>\n                    </Grid>\n                  </Grid>\n        \n        </DialogTitle>\n\n        <List>\n      \n          <ListItem>\n            <TextField \n              id={guessError ? \"standard-error-helper-text\" : \"standard-basic\"} \n              value ={numGuess} \n              onChange={e => setNumGuess(e.target.value)} \n              label={guessError ? \"Error\" : \"Guess\"} \n              defaultValue=\"\"\n              helperText={guessError ? \"Please pick a number in between the lowest and highest guesses\" : \"\"}\n            />\n          </ListItem>\n\n          <ListItem>\n            <Typography variant = \"caption\">\n              Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n            </Typography>\n          </ListItem>\n\n          \n          \n        </List>\n          <Button style = {{\"background-color\": \"#3D3D90\",\"align-self\":\"center\", \"max-width\": \"90%\", \"margin-bottom\":\"0.2rem\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => handleGuess(e)} \n              >\n                  <div className=\"smallButtonText\">Submit</div> \n        </Button>\n        \n        <GuessGameRules show = {rulesShow} handleClose = {handleRulesClose}/>\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessDialog\n","export default __webpack_public_path__ + \"static/media/gif1.c0a77e8d.gif\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport gif from '../gifs/gif1.gif'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessFinishedDialog = props => {\n  \n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const [token, setToken] = useState(props.token);\n    const [show, setShow] = useState(props.show);\n    const [loser, setLoser] = useState(props.loser);\n    const [host, setHost] = useState(props.host)\n\n    const [num, setNum] = useState(props.num);\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n    useEffect(() => {\n        setToken(props.token);\n        setShow(props.show);\n        setLoser(props.loser);\n        setHost(props.host);\n        setNum(props.num);\n        \n      \n      }, [props.token, props.loser, props.show, props.host, props.num]);\n\n    \n    function handleBackToLobby(e) {\n\n        guess.guessToLobby(token)\n        .then(\n            history.push({\n                pathname: \"/createGame\" ,\n                token:token\n            })\n        )\n        \n    }\n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#D2D2CF\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n        <div className=\"medButtonText\">Drinking Time!</div> \n        </DialogTitle>\n\n        <div style = {{\"background-color\": \"#D2D2CF\",  \"vertical-align\": \"middle\",\n                                \"color\": \"#293242\"}}>\n\n          <List>\n      \n              <ListItem>\n                  <div className = \"dialogText\" >\n                      {loser} guessed the correct number ({num}) and must drink!\n                  </div> \n              \n              </ListItem>\n            \n\n\n          \n          </List>\n\n          <img style = {{\n            \"display\" : \"block\",\n            \"align-self\":\"center\", \n            \"margin-bottom\":\"1rem\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\",\n\n          }} src={gif}/>  \n          <Button style = {host ? {\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n            \"align-self\":\"center\", \n            \"margin-bottom\":\"1rem\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\"} : \n              {\"display\":\"none\"}}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={e => handleBackToLobby(e)} \n                >\n                    <div className=\"smallButtonText\">Back To Lobby</div> \n          </Button>\n          \n          \n          \n        </div> \n        \n         \n        \n       \n\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessFinishedDialog\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nimport Header from \"../components/Header\"\nimport guess from '../utils/guess';\nimport general from '../utils/general';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport GuessGameView from '../components/GuessGameView';\nimport GuessDialog from '../components/GuessDialog';\nimport GuessFinishedDialog from '../components/GuessFinishedDialog';\n\n\nexport const GuessNumberGame = props => {\n\n    const history = useHistory();\n\n    const [token, setToken] = useState(props.location.token);\n    const [show, setShow] = useState(false);\n    const [loserShow, setLoserShow] = useState(false);\n    const [loser, setLoser] = useState(\"\");\n\n    const [host, setHost] = useState(false);\n\n    const [name, setName] = useState(\"\");\n\n    const [highest, setHighest] = useState(100);\n    const [lowest, setLowest] = useState(0);\n  \n    const [currGuess, setCurrGuess] = useState([0, \"\"]);\n\n    const [players, setPlayers] = useState([]);\n    const [sojuMap, setSojuMap] = useState({});\n    const [currPlayer, setCurrPlayer] = useState(\"\");\n\n    const [recentlyClosed, setRecClosed] = useState(false);\n   \n    const handleShow = () => setShow(true);\n\n    const handleClose = () => {\n\n\n        setShow(false);\n        setRecClosed(true);\n        setTimeout(() => { setRecClosed(false);}, 4000);\n        \n    }\n\n    useEffect(() => {\n\n        if(token) {\n            setName(token.split(\"_\")[1])\n        } else if(general.hasToken()) {\n            setToken(general.getToken());\n        } else {\n            history.push(\"/\");\n        }\n\n        general.isHost(token) \n        .then(data => {\n\n            if(data) {\n                if(data.isHost) {\n                    setHost(true);\n                }\n            } else {\n                console.log(\"error pinging api\")\n            }\n            \n        })\n      }, []);\n\n    useInterval(() => {\n        checkGame()\n    }, 1000);   \n  \n    const checkGame = () => {\n       \n        guess.getGuessState(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n\n                    if(data.currGuess != currGuess[0]) {\n                        setCurrGuess([data.currGuess, currPlayer]);\n                    }\n\n                    console.log(currGuess);\n                    setHighest(data.highestGuess);\n                    setLowest(data.lowestGuess);\n\n                    setPlayers(data.players);\n                   \n                    \n                    setCurrPlayer(data.currPlayer);\n\n                    setSojuMap(data.sojuMap);\n                    if(data.yourTurn && !data.gameOver && !recentlyClosed) {\n                        console.log(\"hey\");\n                        handleShow();\n                    } else {\n                        setShow(false);\n                    }\n\n                    if(data.gameOver) {\n                        setLoser(data.currPlayer);\n                        setLoserShow(true);\n                    }\n\n                    if(data.link) {\n                        history.push({\n                            pathname: \"/\" + data.link,\n                            token:token\n                        });\n\n                    }\n                } else {\n                    console.log(\"error pinging api\")\n                }\n\n            })\n                \n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n \n\n    \n    return(\n        <body>\n            <Header/> \n            \n\n            <GuessGameView players = {players} sojuMap = {sojuMap} currPlayer = {currPlayer} highest = {highest} lowest = {lowest} currGuess = {currGuess} over = {loserShow} show={show}/>\n            <GuessDialog show = {show} token = {token} highest = {highest} lowest = {lowest} setClosed = {handleClose}/>\n            <GuessFinishedDialog show = {loserShow} loser = {loser} num = {currGuess[0]} host = {host} token = {token} />\n\n           \n        </body>\n    )\n        \n    \n}\n","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass Flick {\n  constructor() {\n    \n  }\n\n\n    getFlickState(token) {\n        return axios.post('/api/getFlickState', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n  \n}\n  \n\n  \n\n\nexport default new Flick();\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\n\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport GuessGameRules from './GuessGameRules';\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\nimport chicken from '../soju/chicken.png'\n\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    }, \n    layout: {\n      width: 'fit-content',\n      maxWidth: \"90%\",\n      marginLeft: 'auto',\n      marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    log: {\n      paddingTop: '1.5rem',\n      paddingBottom: '1.5rem',\n      paddingLeft: '1rem',\n      paddingRight: '1rem'\n    },\n    logContainer: {\n      maxWidth: \"90%\",\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: 'fit-content',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      backgroundColor: '#93CAED',\n      borderRadius: 10\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const FlickGameView = props => {\n  \n    const [players, setPlayers] = useState(props.players);\n    const classes = useStyles();\n    const [rulesShow, setRulesShow] = useState(false);\n    const handleRulesClose = () => setRulesShow(false);\n\n\n    const [currPlayer, setCurrPlayer] = useState(props.currPlayer);\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [currGuess, setCurrGuess] = useState(props.currGuess);\n    const [sojuMap, setSojuMap] = useState({});\n\n    const [over, setOver] = useState(props.over);\n    const [show, setShow] = useState(props.show)\n\n    const [checked, setChecked] = useState(false);\n    const [fadeChecked, setFadeChecked] = useState(false);\n\n    const { height, width } = useWindowDimensions();\n\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee,\n        'chicken': chicken\n    })\n\n    useEffect(() => {\n\n        setPlayers(props.players);\n        setSojuMap(props.sojuMap);\n        setCurrPlayer(props.currPlayer);\n\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        setCurrGuess(props.currGuess);\n\n        setOver(props.over)\n        setShow(props.show);\n        \n\n        console.log(players)\n\n      }, [props.players, props.sojuMap, props.currPlayer, props.highest, props.lowest, props.over, props.show]);\n\n    useEffect(() => {\n\n\n      setFadeChecked(false);\n      setChecked(false);\n\n      setTimeout(function() { //Start the timer\n        setFadeChecked(true);//After 1 second, set render to true\n        setChecked(true);\n      }, 1000)\n\n\n      setCurrGuess(props.currGuess);\n\n    }, [props.currGuess])\n\n    const getIconSize = relSize => {\n\n      return Math.max(relSize/2.1, relSize * width/1920 )\n\n    }\n\n    const getFontSize = () => {\n\n        if(width > 1400) {\n            return \"medium\"\n        }\n\n        if(width > 1000) {\n            return \"small\"\n        }\n\n        if(width > 700) {\n            return \"x-small\"\n        }\n\n        return \"xx-small\"\n    }\n    \n    const getCurrFontSize = () => {\n\n      if(width > 1600) {\n          return \"medium\"\n      }\n\n      if(width > 1400) {\n          return \"small\"\n      }\n\n      if(width > 900) {\n          return \"x-small\"\n      }\n\n      return \"xx-small\"\n  }\n    return (\n        <div>\n\n            <main className={players.length == 0 ? \"hidden\" : classes.layout}>\n                <Paper className={players.length == 0 ? \"hidden\" : classes.paper}> \n\n                <Grid container spacing={3} justifyContent = \"flex-end\">\n                  <Grid item xs style = {{\"max-width\" : \"32%\"}}>\n                    <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                          onClick = {() => setRulesShow(true)}\n                         \n                        >\n                              <div className = \"smallText\">\n                               Rules\n\n                              </div>\n                          \n                         \n                        </Button>\n                    </Grid>\n                  </Grid>\n\n                  <div class =\"paperTitleText\" >\n                      Flick The Soju Bottle Cap\n                  </div>\n\n                  <Grid container  \n                    spacing={2} \n                    alignItems=\"center\"\n                    justifyContent=\"center\" \n                    justify = \"center\"\n                  >\n                    {players.map((player) => (\n                        \n                      <div>\n                          <Card className=\"cardContainer\" style = {currPlayer == player ? {\"background-color\":\"#b1b1af\"} :  {\"background-color\":\"#dcdcdc\"}} raised = {currPlayer == player ? true : false} >\n                            <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                              <img src={sojuToObj[sojuMap[player]]} width={getIconSize(80)} height={getIconSize(120)} />         \n\n                              <div style = {{\n                                  \"max-width\": getIconSize(80),\n                                  \"font-size\": getFontSize(),\n                                  \"font-weight\": \"bold\",\n                                  \"text-decoration\": \"none\",\n                                  \"text-align\" : \"center\", \n                                  \"vertical-align\": \"middle\",\n                                  \"color\": \"#293242\",\n                                  \"word-wrap\": \"break-word\",\n                                  \"line-height\": \"110%\"\n                              }}>\n\n\n                                  {player}\n                              </div>  \n                                      \n                            </CardContent>\n                        </Card>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" spacing={0.1}  style = {player == currPlayer ? {\n                                 \n                                 \"grid-gap\": \"0px 1px\" } : {\"display\":\"none\"}}>\n                          <Grid item>\n                            <ArrowDropUpIcon/>\n                          </Grid>\n                          <Grid item>\n\n                          <div style = {player == currPlayer ? {\n                                  \"max-width\": getIconSize(80),\n                                  \"font-size\": getCurrFontSize(),\n                                  \"font-weight\": \"bold\",\n                                  \"text-decoration\": \"none\",\n                                  \"text-align\" : \"center\", \n                                  \"vertical-align\": \"middle\",\n                                  \"color\": \"#293242\",\n                                  \"word-wrap\": \"break-word\",\n                                  \"line-height\": \"110%\",\n                                  \"padding-bottom\" : \"1rem\"\n                              } : {\"display\":\"none\"}}>\n\n\n                                Current player\n                              </div>  \n                           \n                          </Grid>\n                        </Grid>\n\n                      \n\n                        \n\n                      </div>\n                      \n                          \n                      ))}\n                    \n                \n                    </Grid>\n                </Paper>\n            </main>\n\n\n            <main className={players.length == 0 ? \"hidden\" : classes.layout}>\n                <Paper className={players.length == 0 ? \"hidden\" : classes.paper}> \n\n              \n\n                  <div class =\"paperTitleText\" >\n                      Flick The Soju Bottle Cap\n                  </div>\n                  \n                 \n                    \n                \n                </Paper>\n            </main>\n            \n   \n            {/* <Fade in={fadeChecked}  timeout = {1000}>\n            <Slide direction=\"up\" in={checked} timeout = {1000}>\n\n                <Paper className={(currGuess[0] && !over)? classes.logContainer: \"hidden\"} elevation={6}>                  \n                  <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" className = {classes.log} >\n                      {currGuess[1]} guessed {currGuess[0]}, {currGuess[0] == highest ? \" the number is lower\": \"the number is higher\"}\n                  </Box>\n                </Paper>\n\n                </Slide>\n              \n            </Fade> */}\n            \n           \n                \n            \n            <GuessGameRules show = {rulesShow} handleClose = {handleRulesClose}/>\n\n            \n        </div>\n        \n    );\n\n}\n  \n\nexport default FlickGameView\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nimport Header from \"../components/Header\"\nimport flick from '../utils/flick';\nimport general from '../utils/general';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport FlickGameView from '../components/FlickGameView';\nimport GuessDialog from '../components/GuessDialog';\nimport GuessFinishedDialog from '../components/GuessFinishedDialog';\n\n\nexport const FlickGame = props => {\n\n    const history = useHistory();\n\n    const [token, setToken] = useState(props.location.token);\n\n    const [currHit, setCurrHit] = useState([-1, -1, -1, \"\"]);\n    const [currPlayer, setCurrPlayer] = useState(\"\");\n\n    const [hitRange, setHitRange] = useState(100);\n    const [maxHitPos, setMaxHitPos] = useState(0);\n\n    const [tick, setTick] = useState(false);\n    const [players, setPlayers] = useState([]);\n\n\n    const [show, setShow] = useState(false);\n    const [loserShow, setLoserShow] = useState(false);\n    const [loser, setLoser] = useState(\"\");\n\n    const [host, setHost] = useState(false);\n\n    const [name, setName] = useState(\"\"); \n    const [sojuMap, setSojuMap] = useState({});\n\n\n    const [recentlyClosed, setRecClosed] = useState(false);\n   \n    const handleShow = () => setShow(true);\n\n    const handleClose = () => {\n\n\n        setShow(false);\n        setRecClosed(true);\n        setTimeout(() => { setRecClosed(false);}, 4000);\n        \n    }\n\n    useEffect(() => {\n\n        if(token) {\n            setName(token.split(\"_\")[1])\n        } else if(general.hasToken()) {\n            setToken(general.getToken());\n        } else {\n            history.push(\"/\");\n        }\n\n        general.isHost(token) \n        .then(data => {\n\n            if(data) {\n                if(data.isHost) {\n                    setHost(true);\n                }\n            } else {\n                console.log(\"error pinging api\")\n            }\n            \n        })\n      }, []);\n\n    useInterval(() => {\n        checkGame()\n    }, 1000);   \n  \n    const checkGame = () => {\n       \n        flick.getFlickState(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n\n                    if(data.tick != tick) {\n                        setCurrHit([data.currHitPos, maxHitPos, hitRange, currPlayer]);\n                        setTick(data.tick);\n                    }\n\n                    setMaxHitPos(data.maxHitPos);\n                    setHitRange(data.hitRange);\n                    // console.log(currGuess);\n                    // setHighest(data.highestGuess);\n                    // setLowest(data.lowestGuess);\n\n                    setPlayers(data.players);\n                   \n                    \n                    setCurrPlayer(data.currPlayer);\n\n                    setSojuMap(data.sojuMap);\n                    // if(data.yourTurn && !data.gameOver && !recentlyClosed) {\n                    //     console.log(\"hey\");\n                    //     handleShow();\n                    // } else {\n                    //     setShow(false);\n                    // }\n\n                    if(data.gameOver) {\n                        setLoser(data.currPlayer);\n                        setLoserShow(true);\n                    }\n\n                    if(data.link) {\n                        history.push({\n                            pathname: \"/\" + data.link,\n                            token:token\n                        });\n\n                    }\n                } else {\n                    console.log(\"error pinging api\")\n                }\n\n            })\n                \n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n \n\n    \n    return(\n        <body>\n            <Header/> \n            \n\n            <FlickGameView players = {players} sojuMap = {sojuMap} currPlayer = {currPlayer} currHit = {currHit} over = {loserShow} show={show}/>\n            {/* <GuessDialog show = {show} token = {token} highest = {highest} lowest = {lowest} setClosed = {handleClose}/>\n            <GuessFinishedDialog show = {loserShow} loser = {loser} num = {currGuess[0]} host = {host} token = {token} /> */}\n\n           \n        </body>\n    )\n        \n    \n}\n","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass Blackout {\n  constructor() {\n    \n  }\n\n\n    testBlackout() {\n        return axios.post('/api/testBlackout', {\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n  \n}\n  \n\n  \n\n\nexport default new Blackout();\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nimport Header from \"../components/Header\"\nimport flick from '../utils/flick';\nimport general from '../utils/general';\n\nimport blackout from '../utils/blackout';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\n\nexport const Blackout = props => {\n\n    const history = useHistory();\n\n    const [token, setToken] = useState(props.location.token);\n\n    const [currHit, setCurrHit] = useState([-1, -1, -1, \"\"]);\n    const [currPlayer, setCurrPlayer] = useState(\"\");\n\n    const [hitRange, setHitRange] = useState(100);\n    const [maxHitPos, setMaxHitPos] = useState(0);\n\n    const [tick, setTick] = useState(false);\n    const [players, setPlayers] = useState([]);\n\n\n    const [show, setShow] = useState(false);\n    const [loserShow, setLoserShow] = useState(false);\n    const [loser, setLoser] = useState(\"\");\n\n    const [host, setHost] = useState(false);\n\n    const [name, setName] = useState(\"\"); \n    const [sojuMap, setSojuMap] = useState({});\n\n\n    const [recentlyClosed, setRecClosed] = useState(false);\n   \n    const handleShow = () => setShow(true);\n\n    const [message, setMessage] = useState(\"\")\n\n    const handleClose = () => {\n\n\n        setShow(false);\n        setRecClosed(true);\n        setTimeout(() => { setRecClosed(false);}, 4000);\n        \n    }\n\n    useEffect(() => {\n\n        if(token) {\n            setName(token.split(\"_\")[1])\n        } else if(general.hasToken()) {\n            setToken(general.getToken());\n        } else {\n            history.push(\"/\");\n        }\n\n        general.isHost(token) \n        .then(data => {\n\n            if(data) {\n                if(data.isHost) {\n                    setHost(true);\n                }\n            } else {\n                console.log(\"error pinging api\")\n            }\n            \n        })\n\n        blackout.testBlackout()\n        .then(data => {\n\n            console.log(data);\n            setMessage(data.validMsg);\n        })\n\n\n      }, []);\n\n    useInterval(() => {\n        checkGame()\n    }, 1000);   \n  \n    const checkGame = () => {\n       \n        // flick.getFlickState(token)\n        //     .then(data => {\n        //         console.log(data)\n\n        //         if(data) {\n\n        //             if(data.tick != tick) {\n        //                 setCurrHit([data.currHitPos, maxHitPos, hitRange, currPlayer]);\n        //                 setTick(data.tick);\n        //             }\n\n        //             setMaxHitPos(data.maxHitPos);\n        //             setHitRange(data.hitRange);\n        //             // console.log(currGuess);\n        //             // setHighest(data.highestGuess);\n        //             // setLowest(data.lowestGuess);\n\n        //             setPlayers(data.players);\n                   \n                    \n        //             setCurrPlayer(data.currPlayer);\n\n        //             setSojuMap(data.sojuMap);\n        //             // if(data.yourTurn && !data.gameOver && !recentlyClosed) {\n        //             //     console.log(\"hey\");\n        //             //     handleShow();\n        //             // } else {\n        //             //     setShow(false);\n        //             // }\n\n        //             if(data.gameOver) {\n        //                 setLoser(data.currPlayer);\n        //                 setLoserShow(true);\n        //             }\n\n        //             if(data.link) {\n        //                 history.push({\n        //                     pathname: \"/\" + data.link,\n        //                     token:token\n        //                 });\n\n        //             }\n        //         } else {\n        //             console.log(\"error pinging api\")\n        //         }\n\n        //     })\n                \n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n \n\n    \n    return(\n        <body>\n            <Header/> \n            \n            <div>{message}</div>\n\n            {/* <FlickGameView players = {players} sojuMap = {sojuMap} currPlayer = {currPlayer} currHit = {currHit} over = {loserShow} show={show}/> */}\n            {/* <GuessDialog show = {show} token = {token} highest = {highest} lowest = {lowest} setClosed = {handleClose}/>\n            <GuessFinishedDialog show = {loserShow} loser = {loser} num = {currGuess[0]} host = {host} token = {token} /> */}\n\n           \n        </body>\n    )\n        \n    \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter , Route, Switch, Redirect } from \"react-router-dom\";\n// import {  browserHistory, Router, Route, IndexRoute } from 'react-router'\n// import { browserHistory } from 'history'\nimport './index.css';\nimport { HomePage } from \"./pages/HomePage\";\nimport  {LobbyPage}  from \"./pages/LobbyPage\";\nimport  {CreateGamePage}  from \"./pages/CreateGamePage\";\n\nimport  {GuessNumberGame}  from \"./pages/GuessNumberGame\";\nimport { FlickGame } from './pages/FlickGame';\nimport { Blackout } from './pages/Blackout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Switch >\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/lobby\" component={LobbyPage} />\n        <Route exact path=\"/createGame\" component={CreateGamePage} />\n\n        <Route exact path=\"/guessNumberGame\" component={GuessNumberGame} />\n        <Route exact path=\"/flickGame\" component={FlickGame} />\n        <Route exact path=\"/blackout\" component={Blackout} />\n\n\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  rootElement\n);\n"],"sourceRoot":""}