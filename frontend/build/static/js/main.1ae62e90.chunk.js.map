{"version":3,"sources":["StyleSheets/koreanchicken.jpg","utils/general.js","components/Header.js","pages/HomePage.js","components/JoinGameForm.js","soju/apple.png","soju/grapefruit.png","soju/original.png","soju/peach.png","soju/plum.png","soju/strawberry.png","soju/watermelon.png","soju/lychee.png","components/LobbyView.js","pages/LobbyPage.js","components/CreateGameForm.js","pages/CreateGamePage.js","utils/guess.js","components/GuessGameView.js","components/GuessDialog.js","gifs/gif1.gif","components/GuessFinishedDialog.js","pages/GuessNumberGame.js","index.js"],"names":["Cookies","get","console","log","undefined","remove","username","axios","post","then","res","data","isValid","set","individualToken","expires","catch","err","code","token","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","history","useHistory","classes","AppBar","position","Toolbar","Typography","variant","className","onClick","push","general","hasToken","Button","color","removeToken","window","location","reload","appBar","layout","width","marginLeft","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","HomePage","Paper","Grid","container","item","xs","style","textAlign","src","kchicken","to","JoinGameForm","state","gameCode","indToken","gameCreated","handleUsernameChange","bind","handleCodeChange","handleSubmit","event","this","setState","target","value","split","preventDefault","joinGame","gameToken","passToken","alert","validMsg","Fragment","gutterBottom","TextField","id","onChange","label","React","Component","getWindowDimensions","innerWidth","height","innerHeight","control","image","flex","resizeMode","cardText","LobbyView","useState","players","setPlayers","setToken","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","sojuMap","setSojuMap","apple","grapefruit","original","peach","plum","strawberry","watermelon","lychee","sojuToObj","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","checkGame","checkGameStarted","link","gameStarted","gameLink","pathname","getIconSize","relSize","Math","max","justify","alignItems","paddingTop","map","player","Card","CardContent","maxWidth","LobbyPage","getToken","paddingBottom","CreateGameForm","cookies_token","handleChange","handleGuessLink","e","startGuessGame","createGame","backgroundColor","borderRadius","CreateGamePage","guess","paddingLeft","paddingRight","logContainer","GuessGameView","currPlayer","setCurrPlayer","highest","setHighest","lowest","setLowest","currGuess","setCurrGuess","over","setOver","checked","setChecked","fadeChecked","setFadeChecked","setTimeout","length","class","raised","Fade","in","timeout","Slide","direction","elevation","Box","fontWeight","m","GuessDialog","show","setShow","guessError","setGuessError","numGuess","setNumGuess","handleGuess","setClosed","Dialog","open","fullWidth","DialogTitle","List","ListItem","defaultValue","helperText","GuessFinishedDialog","loser","setLoser","host","setHost","num","setNum","gif","guessToLobby","GuessNumberGame","loserShow","setLoserShow","setName","isHost","getGuessState","highestGuess","lowestGuess","yourTurn","gameOver","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ae62e90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/koreanchicken.ff72deb8.jpg\";","import axios from \"axios\";\nimport Cookies from 'js-cookie';\n\nclass General {\n  constructor() {\n    \n  }\n\n  getToken() {\n    return Cookies.get('token')\n  }\n\n  hasToken() {\n\n    console.log(Cookies.get('token'));\n    return Cookies.get('token') != undefined;\n  }\n\n  removeToken() {\n    Cookies.remove('token');\n  }\n\n  createGame(username) {\n    return axios.post('/api/createGame', {\n      username: username\n    })\n      .then(res => {\n           \n            if(res.data.isValid) {\n              Cookies.set('token', res.data.individualToken, { expires: 1 })\n           \n            }\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  joinGame(username, code) {\n    return axios.post('/api/joinGame', {\n      username: username,\n      code: code\n    })\n      .then(res => {\n\n            if(res.data.isValid) {\n              Cookies.set('token', res.data.individualToken, { expires: 1 })\n            }\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  checkGameStarted(token) {\n    return axios.post('/api/checkGameStarted', {\n        token: token\n      })\n        .then(res => {\n              return res.data;\n        })\n        .catch(err => {\n          console.log(err);\n        })\n\n    }\n\n    startGuessGame(token) {\n        return axios.post('/api/startGuessGame', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n        }\n\n    isHost(token) {\n      return axios.post('/api/isHost', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n      }\n  \n\n  \n\n  \n}\n\nexport default new General();\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport { useHistory } from 'react-router';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport general from '../utils/general';\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\n\n\nexport const Header = props =>  {\n\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const handleClick = () => {\n    general.removeToken();\n    window.location.reload();\n  }\n\n\n  return (\n    // <div className=\"Title\">\n    //   <h1>Kaychiq</h1>\n    // </div>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title} onClick = {() => history.push(\"/\")}>\n          Kaychiq\n        </Typography>\n        <div className = {general.hasToken() ? \"\" : \"hidden\"}>\n          <Button  color=\"inherit\" onClick = {() => handleClick()}>Leave Game</Button>\n\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","  \nimport React from \"react\";\nimport kchicken from \"../StyleSheets/koreanchicken.jpg\"\nimport Header from \"../components/Header.js\"\nimport home from \"../StyleSheets/HomePage.css\"\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      \n     \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const HomePage = props => {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Header />\n\n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n\n                    <Grid \n                        container \n                        spacing={6}\n                    >\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <img className= \"pic\" src={kchicken} style={{\"align-self\":\"center\", \"max-width\": \"90%\", \"max-height\": \"100%\", \"border-radius\": \"15px\"}}/> \n                        </Grid>\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <Link to=\"/createGame\" className=\"link\">\n                                <Button\n                                \n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <div className=\"buttonText\">Create Game </div> \n                                </Button>                                                      \n                            </Link>\n                        </Grid>\n\n                        <Grid item xs={12} style={{textAlign: \"center\"}}>\n                            <Link to=\"/lobby\" className=\"link\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <div className=\"buttonText\">Join Lobby</div> \n                                </Button>                                                      \n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </main>\n        </div>\n    )\n}","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass JoinGameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      \n      this.state = {username: '', gameCode: \"\", indToken: \"\", gameCreated: false};\n  \n      this.handleUsernameChange = this.handleUsernameChange.bind(this);\n      this.handleCodeChange = this.handleCodeChange.bind(this);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleUsernameChange(event) {\n      this.setState({username: event.target.value});\n    }\n\n    handleCodeChange(event) {\n        this.setState({gameCode: event.target.value});\n      }\n\n    componentWillReceiveProps(props) {\n      \n        if(props.token) {\n          this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token});\n        }\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        general.joinGame(this.state.username, this.state.gameCode)\n        .then(data => {\n\n            if(data.isValid) {\n                this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n                this.props.passToken(data.individualToken);\n                console.log(data);\n                this.setState({gameCreated: true});    \n\n            } else {\n                alert(data.validMsg)\n            }\n            \n        })\n\n         \n    }\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n\n          \n            return (\n\n              <React.Fragment  >\n\n                <Typography variant=\"h6\" gutterBottom>\n                Join Game\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleUsernameChange} label=\"Username\" />\n\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField id=\"standard-basic\" value={this.state.gameCode} onChange={this.handleCodeChange} label=\"Game Code\" />\n\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleSubmit}   \n                    >\n                      Submit\n                    </Button>\n\n                  </Grid>\n                </Grid>\n\n              \n              </React.Fragment>      \n              );\n        } else {\n            return (\n\n              <React.Fragment  >\n\n                <div className=\"titleText\"> You have joined game {this.state.gameCode}</div> \n               \n              </React.Fragment> \n                \n              );\n        }\n      \n    }\n  }\n\nexport default JoinGameForm\n","export default __webpack_public_path__ + \"static/media/apple.e6f58345.png\";","export default __webpack_public_path__ + \"static/media/grapefruit.56b4ec34.png\";","export default __webpack_public_path__ + \"static/media/original.7364428a.png\";","export default __webpack_public_path__ + \"static/media/peach.4b3916d7.png\";","export default __webpack_public_path__ + \"static/media/plum.848150eb.png\";","export default __webpack_public_path__ + \"static/media/strawberry.e2f74bfd.png\";","export default __webpack_public_path__ + \"static/media/watermelon.816a1fa5.png\";","export default __webpack_public_path__ + \"static/media/lychee.829c269d.png\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n  \n  function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  \n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    image: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'contain'\n    },\n    cardText: {\n        \"max-width\": \"80\",\n        \"font-size\": \"medium\",\n        \"font-weight\": \"bold\",\n        \"text-decoration\": \"none\",\n        \"text-align\" : \"center\",\n        \"word-wrap\": \"break-word\",\n    \n        \"margin\": \"0.1rem\",\n        \"color\": \"#293242\"\n    }\n  }));\n\nexport const LobbyView = props => {\n  \n    const [players, setPlayers] = useState([]);\n    const [token, setToken] = useState(props.token)\n    const history = useHistory();\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n    \n    const { height, width } = useWindowDimensions();\n\n    const [sojuMap, setSojuMap] = useState({});\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee\n    })\n\n    useEffect(() => {\n\n        if (props.token !== token) {\n            setToken(props.token);        \n        }\n    });\n\n    \n    const startGame = link => {\n        history.push({\n            pathname: \"/\" + link,\n            token:token\n        });\n    }\n\n    useInterval(() => {\n        checkGame()\n    }, 2000);   \n  \n    const soju = name => {\n        if(name == \"Akshin\") {\n            return lychee;\n        }\n\n        return apple;\n    }\n    const checkGame = () => {\n\n        console.log(width)\n       \n        general.checkGameStarted(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n                    if(data.gameStarted) {\n                        startGame(data.gameLink)\n                    }\n                    setPlayers(data.players)\n                    setSojuMap(data.sojuMap)\n                } else {\n                    console.log(\"Error pinging api\")\n                }\n                \n            })\n    };\n\n    const getIconSize = relSize => {\n\n        return Math.max(relSize/2.3, relSize * width/1920 )\n\n    }\n\n    const getFontSize = () => {\n\n        if(width > 1400) {\n            return \"medium\"\n        }\n\n        if(width > 1000) {\n            return \"small\"\n        }\n\n        if(width > 700) {\n            return \"x-small\"\n        }\n\n        return \"xx-small\"\n    }\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n      }\n\n    return (          \n        <Grid \n            container \n            justifyContent=\"center\" \n            justify = \"center\" \n            alignItems=\"center\"\n            spacing={5}\n            marginTop={50}\n            marginBottom={50}\n            paddingTop = '1.5rem'\n        >\n            {players.map((player) => (\n                \n                    <Card className = \"cardContainer\">\n                        <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                            <img src={sojuToObj[sojuMap[player]]} width={getIconSize(80)} height={getIconSize(120)} />         \n\n                            <div style = {{\n                                \"max-width\": getIconSize(80),\n                                \"font-size\": getFontSize(),\n                                \"font-weight\": \"bold\",\n                                \"text-decoration\": \"none\",\n                                \"text-align\" : \"center\", \n                                \"vertical-align\": \"middle\",\n                                \"color\": \"#293242\"\n                            }}>\n\n\n                                {player}\n                            </div>  \n                        \n                        </CardContent>\n                    </Card>\n                \n            ))}\n        </Grid>\n         \n      \n        \n    );\n\n}\n  \n\nexport default LobbyView\n","import React, { useState, useEffect }  from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport JoinGameForm from \"../components/JoinGameForm\";\nimport LobbyView from \"../components/LobbyView\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport general from \"../utils/general\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n        width: 'fit-content',\n        maxWidth: \"90%\",\n        marginLeft: 'auto',\n        marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const LobbyPage = props => {\n\n    const classes = useStyles();\n\n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n\n        else if(general.hasToken()) {\n            setToken(general.getToken());\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n  \n    return(\n        <body>\n            <Header/> \n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n                    <JoinGameForm passToken={handleToken} token={token}/>\n                </Paper>\n            </main>\n\n            \n            <main className={token ? classes.layout : \"hidden\"}>\n                <Paper className={classes.paper}> \n                    <Grid container spacing={3}   paddingBottom = '5rem'>\n\n                        <Grid item xs={12}>\n                          \n                            <div className=\"titleText\">Lobby </div>  \n\n                        </Grid>\n  \n                    </Grid>\n                    <LobbyView token={token}/>\n                </Paper>\n            </main>\n        </body>\n    )\n          \n}\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { Link } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass CreateGameForm extends React.Component {\n    constructor(props) {\n\n      \n      super(props);\n\n      console.log(props)\n      \n      const cookies_token = general.getToken();\n      if(props.token) {\n        this.state = {username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token};\n\n      } else if(general.hasToken()) {\n        this.state = {username: cookies_token.split('_')[1], gameCreated: true, gameCode: cookies_token.split('_')[0], indToken:  cookies_token};\n\n      } else {\n        this.state = {username: '', gameCreated: false, gameCode: \"\", indToken: \"\"};\n\n      }\n\n      \n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleGuessLink = this.handleGuessLink.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n      \n      if(props.token) {\n        this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token});\n      }\n    }\n  \n    handleGuessLink(e) {\n\n        general.startGuessGame(this.state.indToken)\n        .then(data => {\n            if(!data.isValid) {\n                alert(data.validMsg);\n                e.preventDefault();\n\n            }\n        })\n        console.log(\"hey\");\n    }\n    handleChange(event) {\n      this.setState({username: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"hey\");\n        general.createGame(this.state.username)\n        .then(data => {\n            this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n            this.props.passToken(data.individualToken);\n        })\n\n        this.setState({gameCreated: true});    \n    }\n\n\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n            return (\n\n              <React.Fragment  >\n\n                    <Typography variant=\"h6\" gutterBottom>\n                    Create Game\n                    </Typography>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12}>\n                        <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleChange} label=\"Username\" />\n\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={this.handleSubmit}   \n                        >\n                          Submit\n                        </Button>\n\n                      </Grid>\n                    </Grid>\n\n                    \n                </React.Fragment>\n\n              );\n        } else {\n            return (\n              <React.Fragment  >\n                <Grid container spacing={3}>\n\n                  <Grid item xs={12}>\n                    <div className=\"titleText\">Your game code is {this.state.gameCode} </div> \n                      \n\n                  </Grid>\n                    <Grid item xs={12}>\n                      <Link \n                        to={{pathname: \"/guessNumberGame\",token:this.state.indToken}} \n                        className=\"link\" \n                        onClick={(e) => this.handleGuessLink(e)}\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style = \n                          {{\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n                          \"align-self\":\"center\", \n                          \"margin-bottom\":\"1rem\",\n                          \"margin-left\": \"auto\",\n                          \"margin-right\": \"auto\"}} \n                        >\n                          <Typography variant=\"button\">\n                              Start Guess Bottle No. Game\n                          </Typography>\n                         \n                        </Button>\n                      </Link>\n\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n                \n              );\n        }\n      \n    }\n  }\n\nexport default CreateGameForm\n\n{/* <Typography variant=\"h6\" gutterBottom>\nCreate Game\n</Typography>\n<Grid container spacing={3}>\n  <Grid item xs={12}>\n    <TextField id=\"standard-basic\" value={this.state.username} onChange={this.handleChange} label=\"Username\" />\n\n  </Grid>\n</Grid> */}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport CreateGameForm from \"../components/CreateGameForm\";\nimport LobbyView from \"../components/LobbyView\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport purple from '@material-ui/core/colors/purple';\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n        width: 'fit-content',\n        maxWidth: \"90%\",\n        marginLeft: 'auto',\n        marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: '1.5rem',\n      width: 'fit-content',\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nexport const CreateGamePage = props =>{\n    const classes = useStyles();\n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n\n    return(\n        <body>\n            <Header/> \n            <main className={classes.layout}>\n                <Paper className={classes.paper}> \n                    <CreateGameForm passToken={handleToken} token={token}/>\n                </Paper>\n            </main>\n\n            <main className={token ? classes.layout : \"hidden\"}>\n                <Paper className={classes.paper}>\n                    <Grid container spacing={3}   paddingBottom = '5rem'>\n\n                        <Grid item xs={12}>\n                            {/* <div className=\"titleText\">Your game code is {this.state.gameCode} </div>  */}\n                            <div className=\"titleText\">Lobby </div>  \n\n                        </Grid>\n  \n                    </Grid>\n                    \n                    <LobbyView token={token}/>\n                </Paper>\n            </main>\n\n        \n        </body>\n    )\n          \n}\n","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass Guess {\n  constructor() {\n    \n  }\n\n\n    getGuessState(token) {\n        return axios.post('/api/getGuessState', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guess(token, guess) {\n        return axios.post('/api/guess', {\n            token: token,\n            guess: guess\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guessToLobby(token) {\n      return axios.post('/api/guessToLobby', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n  }\n  \n\n  \n}\n\nexport default new Guess();\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    }, \n    layout: {\n      width: 'fit-content',\n      maxWidth: \"90%\",\n      marginLeft: 'auto',\n      marginRight: 'auto',       \n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(1),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n      backgroundColor: '#C4C3D0',\n      borderRadius: 10\n    },\n    log: {\n      paddingTop: '1.5rem',\n      paddingBottom: '1.5rem',\n      paddingLeft: '1rem',\n      paddingRight: '1rem'\n    },\n    logContainer: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: 'fit-content',\n      paddingLeft: '1rem',\n      paddingRight: '1rem',\n      backgroundColor: '#93CAED',\n      borderRadius: 10\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessGameView = props => {\n  \n    const [players, setPlayers] = useState(props.players);\n    const classes = useStyles();\n\n    const [currPlayer, setCurrPlayer] = useState(props.currPlayer);\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [currGuess, setCurrGuess] = useState(props.currGuess);\n    const [sojuMap, setSojuMap] = useState({});\n\n    const [over, setOver] = useState(props.over);\n\n    const [checked, setChecked] = useState(false);\n    const [fadeChecked, setFadeChecked] = useState(false);\n\n    const { height, width } = useWindowDimensions();\n\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee\n    })\n\n    useEffect(() => {\n\n        setPlayers(props.players);\n        setSojuMap(props.sojuMap);\n        setCurrPlayer(props.currPlayer);\n\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        setCurrGuess(props.currGuess);\n\n        setOver(props.over)\n        \n\n        console.log(players)\n\n      }, [props.players, props.sojuMap, props.currPlayer, props.highest, props.lowest, props.over]);\n\n    useEffect(() => {\n\n\n      setFadeChecked(false);\n      setChecked(false);\n\n      setTimeout(function() { //Start the timer\n        setFadeChecked(true);//After 1 second, set render to true\n        setChecked(true);\n      }, 1000)\n\n\n      setCurrGuess(props.currGuess);\n\n    }, [props.currGuess])\n\n    const getIconSize = relSize => {\n\n      return Math.max(relSize/2.3, relSize * width/1920 )\n\n    }\n\n    const getFontSize = () => {\n\n        if(width > 1400) {\n            return \"medium\"\n        }\n\n        if(width > 1000) {\n            return \"small\"\n        }\n\n        if(width > 700) {\n            return \"x-small\"\n        }\n\n        return \"xx-small\"\n    }\n    \n    return (\n        <div>\n\n            <main className={players.length == 0 ? \"hidden\" : classes.layout}>\n                <Paper className={players.length == 0 ? \"hidden\" : classes.paper}> \n                  <div class =\"paperTitleText\" >\n                      Guess The Soju Bottle No.\n                  </div>\n\n                  <div class =\"mutedText\" >\n                      Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n                  </div>\n                  <Grid container  \n                    spacing={2} \n                    alignItems=\"center\"\n                    justifyContent=\"center\" \n                    justify = \"center\"\n                  >\n                    {players.map((player) => (\n                              \n                      <Card className=\"cardContainer\" style = {currPlayer == player ? {\"background-color\":\"#b1b1af\"} :  {\"background-color\":\"#dcdcdc\"}} raised = {currPlayer == player ? true : false} >\n                          <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                            <img src={sojuToObj[sojuMap[player]]} width={getIconSize(80)} height={getIconSize(120)} />         \n\n                            <div style = {{\n                                \"max-width\": getIconSize(80),\n                                \"font-size\": getFontSize(),\n                                \"font-weight\": \"bold\",\n                                \"text-decoration\": \"none\",\n                                \"text-align\" : \"center\", \n                                \"vertical-align\": \"middle\",\n                                \"color\": \"#293242\"\n                            }}>\n\n\n                                {player}\n                            </div>  \n                                    \n                          </CardContent>\n                      </Card>\n                          \n                      ))}\n                    \n                \n                    </Grid>\n                </Paper>\n            </main>\n            \n   \n            <Fade in={fadeChecked}  timeout = {1000}>\n            <Slide direction=\"up\" in={checked} timeout = {1000}>\n\n                <Paper className={(currGuess[0] && !over)? classes.logContainer: \"hidden\"} elevation={6}>                  \n                  <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" className = {classes.log} >\n                      {currGuess[1]} guessed {currGuess[0]}, {currGuess[0] == highest ? \" the number is lower\": \"the number is higher\"}\n                  </Box>\n                </Paper>\n\n                </Slide>\n              \n            </Fade>\n            \n           \n                \n            \n\n            \n        </div>\n        \n    );\n\n}\n  \n\nexport default GuessGameView\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessDialog = props => {\n  \n    const classes = useStyles();\n\n    const [token, setToken] = useState(props.token);\n    const [show, setShow] = useState(props.show);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [guessError, setGuessError] = useState(false);\n\n\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [numGuess, setNumGuess] = useState(0);\n  \n\n    useEffect(() => {\n        setToken(props.token);\n        setShow(props.show);\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        \n      \n      }, [props.token, props.highest, props.lowest, props.show]);\n\n    function handleGuess(e) {\n        e.preventDefault();\n        \n        console.log(numGuess);\n\n        if(numGuess >= highest || numGuess <= lowest) {\n            setGuessError(true);\n        } else {\n            setGuessError(false);\n            props.setClosed();\n            setNumGuess(null)\n            handleClose();\n            guess.guess(token, numGuess)\n            .then(data => {\n            })\n            \n        }\n    }\n    \n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#626f87\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n        <div className=\"medButtonText\">Enter your Guess</div> \n        </DialogTitle>\n\n        <List>\n      \n          <ListItem>\n            <TextField \n              id={guessError ? \"standard-error-helper-text\" : \"standard-basic\"} \n              value ={numGuess} \n              onChange={e => setNumGuess(e.target.value)} \n              label={guessError ? \"Error\" : \"Guess\"} \n              defaultValue=\"\"\n              helperText={guessError ? \"Please pick a number in between the lowest and highest guesses\" : \"\"}\n            />\n          </ListItem>\n\n          <ListItem>\n            <Typography variant = \"caption\">\n              Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n            </Typography>\n          </ListItem>\n\n          \n          \n        </List>\n          <Button style = {{\"background-color\": \"#3D3D90\",\"align-self\":\"center\", \"max-width\": \"90%\", \"margin-bottom\":\"0.2rem\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => handleGuess(e)} \n              >\n                  <div className=\"smallButtonText\">Submit</div> \n        </Button>\n        \n\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessDialog\n","export default __webpack_public_path__ + \"static/media/gif1.c0a77e8d.gif\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport guess from '../utils/guess';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport gif from '../gifs/gif1.gif'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessFinishedDialog = props => {\n  \n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const [token, setToken] = useState(props.token);\n    const [show, setShow] = useState(props.show);\n    const [loser, setLoser] = useState(props.loser);\n    const [host, setHost] = useState(props.host)\n\n    const [num, setNum] = useState(props.num);\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n    useEffect(() => {\n        setToken(props.token);\n        setShow(props.show);\n        setLoser(props.loser);\n        setHost(props.host);\n        setNum(props.num);\n        \n      \n      }, [props.token, props.loser, props.show, props.host, props.num]);\n\n    \n    function handleBackToLobby(e) {\n\n        guess.guessToLobby(token)\n        .then(\n            history.push({\n                pathname: \"/createGame\" ,\n                token:token\n            })\n        )\n        \n    }\n    return (\n      <Dialog open={show} aria-labelledby=\"simple-dialog-title\" fullWidth maxWidth=\"xs\" style = {{\"color\": \"#D2D2CF\"}}>\n        <DialogTitle id=\"simple-dialog-title\" style = {{\"background-color\": \"#626f87\"}}>\n        <div className=\"medButtonText\">Drinking Time!</div> \n        </DialogTitle>\n\n        <div style = {{\"background-color\": \"#D2D2CF\",  \"vertical-align\": \"middle\",\n                                \"color\": \"#293242\"}}>\n\n          <List>\n      \n              <ListItem>\n                  <div className = \"dialogText\" >\n                      {loser} guessed the correct number ({num}) and must drink!\n                  </div> \n              \n              </ListItem>\n            \n\n\n          \n          </List>\n\n          <img style = {{\n            \"display\" : \"block\",\n            \"align-self\":\"center\", \n            \"margin-bottom\":\"1rem\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\",\n\n          }} src={gif}/>  \n          <Button style = {host ? {\"background-color\": \"#3D3D90\", \"max-width\": \"90%\", \"display\" : \"block\",\n            \"align-self\":\"center\", \n            \"margin-bottom\":\"1rem\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\"} : \n              {\"display\":\"none\"}}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={e => handleBackToLobby(e)} \n                >\n                    <div className=\"smallButtonText\">Back To Lobby</div> \n          </Button>\n          \n          \n          \n        </div> \n        \n         \n        \n       \n\n    </Dialog>\n        \n    );\n\n}\n  \n\nexport default GuessFinishedDialog\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nimport Header from \"../components/Header\"\nimport guess from '../utils/guess';\nimport general from '../utils/general';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport GuessGameView from '../components/GuessGameView';\nimport GuessDialog from '../components/GuessDialog';\nimport GuessFinishedDialog from '../components/GuessFinishedDialog';\n\n\nexport const GuessNumberGame = props => {\n\n    const history = useHistory();\n\n    const [token, setToken] = useState(props.location.token);\n    const [show, setShow] = useState(false);\n    const [loserShow, setLoserShow] = useState(false);\n    const [loser, setLoser] = useState(\"\");\n\n    const [host, setHost] = useState(false);\n\n    const [name, setName] = useState(\"\");\n\n    const [highest, setHighest] = useState(100);\n    const [lowest, setLowest] = useState(0);\n  \n    const [currGuess, setCurrGuess] = useState([0, \"\"]);\n\n    const [players, setPlayers] = useState([]);\n    const [sojuMap, setSojuMap] = useState({});\n    const [currPlayer, setCurrPlayer] = useState(\"\");\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    useEffect(() => {\n\n        if(token) {\n            setName(token.split(\"_\")[1])\n        } else if(general.hasToken()) {\n            setToken(general.getToken());\n        } else {\n            history.push(\"/\");\n        }\n\n        general.isHost(token) \n        .then(data => {\n\n            if(data) {\n                if(data.isHost) {\n                    setHost(true);\n                }\n            } else {\n                console.log(\"error pinging api\")\n            }\n            \n        })\n      }, []);\n\n    useInterval(() => {\n        checkGame()\n    }, 1000);   \n  \n    const checkGame = () => {\n       \n        guess.getGuessState(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n\n                    if(data.currGuess != currGuess[0]) {\n                        setCurrGuess([data.currGuess, currPlayer]);\n                    }\n\n                    console.log(currGuess);\n                    setHighest(data.highestGuess);\n                    setLowest(data.lowestGuess);\n\n                    setPlayers(data.players);\n                   \n                    \n                    setCurrPlayer(data.currPlayer);\n\n                    setSojuMap(data.sojuMap);\n                    if(data.yourTurn && !data.gameOver) {\n                        console.log(\"hey\");\n                        handleShow();\n                    }\n\n                    if(data.gameOver) {\n                        setLoser(data.currPlayer);\n                        setLoserShow(true);\n                    }\n\n                    if(data.link) {\n                        history.push({\n                            pathname: \"/\" + data.link,\n                            token:token\n                        });\n\n                    }\n                } else {\n                    console.log(\"error pinging api\")\n                }\n\n            })\n                \n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n \n\n    \n    return(\n        <body>\n            <Header/> \n            \n\n            <GuessGameView players = {players} sojuMap = {sojuMap} currPlayer = {currPlayer} highest = {highest} lowest = {lowest} currGuess = {currGuess} over = {loserShow}/>\n            <GuessDialog show = {show} token = {token} highest = {highest} lowest = {lowest} setClosed = {handleClose}/>\n            <GuessFinishedDialog show = {loserShow} loser = {loser} num = {currGuess[0]} host = {host} token = {token} />\n\n           \n        </body>\n    )\n        \n    \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport './index.css';\nimport { HomePage } from \"./pages/HomePage\";\nimport  {LobbyPage}  from \"./pages/LobbyPage\";\nimport  {CreateGamePage}  from \"./pages/CreateGamePage\";\n\nimport  {GuessNumberGame}  from \"./pages/GuessNumberGame\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/lobby\" component={LobbyPage} />\n        <Route exact path=\"/createGame\" component={CreateGamePage} />\n\n        <Route exact path=\"/guessNumberGame\" component={GuessNumberGame} />\n\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}