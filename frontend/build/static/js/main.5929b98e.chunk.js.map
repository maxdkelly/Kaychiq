{"version":3,"sources":["StyleSheets/koreanchicken.jpg","components/Header.js","pages/HomePage.js","utils/general.js","components/JoinGameForm.js","soju/apple.png","soju/grapefruit.png","soju/original.png","soju/peach.png","soju/plum.png","soju/strawberry.png","soju/watermelon.png","soju/lychee.png","components/LobbyView.js","pages/LobbyPage.js","components/CreateGameForm.js","pages/CreateGamePage.js","utils/guess.js","components/GuessGameView.js","gifs/gif1.gif","pages/GuessNumberGame.js","index.js"],"names":["Title","className","HomePage","props","Header","to","src","kchicken","style","username","axios","post","then","res","data","catch","err","console","log","code","token","JoinGameForm","state","gameCode","indToken","gameCreated","handleUsernameChange","bind","handleCodeChange","handleSubmit","event","this","setState","target","value","split","preventDefault","general","joinGame","isValid","gameToken","individualToken","passToken","alert","validMsg","onSubmit","type","onChange","React","Component","useStyles","makeStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","LobbyView","useState","players","setPlayers","setToken","history","useHistory","sojuMap","setSojuMap","apple","grapefruit","original","peach","plum","strawberry","watermelon","lychee","sojuToObj","useEffect","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","checkGame","checkGameStarted","link","gameStarted","gameLink","push","pathname","Grid","item","container","justifyContent","justify","alignItems","map","player","Card","CardContent","Typography","component","Box","fontWeight","m","LobbyPage","location","CreateGameForm","handleChange","handleGuessLink","e","startGuessGame","createGame","onClick","CreateGamePage","guess","GuessGameView","currPlayer","setCurrPlayer","highest","setHighest","lowest","setLowest","currGuess","setCurrGuess","GuessNumberGame","show","setShow","loserShow","setLoserShow","loser","setLoser","host","setHost","name","setName","numGuess","setNumGuess","guessError","setGuessError","handleClose","isHost","getGuessState","highestGuess","lowestGuess","yourTurn","gameOver","Modal","onHide","backdrop","keyboard","Body","Form","Group","controlId","hasValidation","Label","Control","placeholder","Text","Button","variant","handleGuess","Footer","gif","guessToLobby","App","exact","path","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5929b98e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/koreanchicken.ff72deb8.jpg\";","import React from 'react'\nimport '../StyleSheets/Title.css';\n\nfunction Title() {\n  return (\n    <div className=\"Title\">\n      <h1>Kaychiq</h1>\n    </div>\n  )\n}\n\nexport default Title","  \nimport React from \"react\";\nimport kchicken from \"../StyleSheets/koreanchicken.jpg\"\nimport Header from \"../components/Header.js\"\nimport home from \"../StyleSheets/HomePage.css\"\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\n\nexport const HomePage = props => {\n    return (\n        <div>\n            <Header />\n            <div>\n               \n                < div className=\"homeContainer\" > \n                    <div> \n                        <div className=\"text\">Do you want to get fucked</div>\n                        <div className=\"textLARG\"> Kaychiq is the solution for you!  </div>\n\n                        <Link to=\"/createGame\" className=\"userContainer\">\n                            <div className=\"textLARG\">Create Game </div>                                                         \n                        </Link>\n                        <Link to=\"/lobby\" className=\"userContainer\">\n                            <div className=\"textLARG\">Join Lobby </div>       \n                        </Link>\n                       \n                    </div>\n                    \n                  \n\n                    <img className= \"pic\" src={kchicken} style={{\"align-self\":\"center\"}}/> \n                </div>\n            </div>\n        </div>\n    )\n}","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass General {\n  constructor() {\n    \n  }\n\n  createGame(username) {\n    return axios.post('/api/createGame', {\n      username: username\n    })\n      .then(res => {\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  joinGame(username, code) {\n    return axios.post('/api/joinGame', {\n      username: username,\n      code: code\n    })\n      .then(res => {\n            return res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  checkGameStarted(token) {\n    return axios.post('/api/checkGameStarted', {\n        token: token\n      })\n        .then(res => {\n              return res.data;\n        })\n        .catch(err => {\n          console.log(err);\n        })\n\n    }\n\n    startGuessGame(token) {\n        return axios.post('/api/startGuessGame', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n        }\n\n    isHost(token) {\n      return axios.post('/api/isHost', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n      }\n  \n\n  \n\n  \n}\n\nexport default new General();\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nclass JoinGameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {username: '', gameCode: \"\", indToken: \"\", gameCreated: false};\n  \n      this.handleUsernameChange = this.handleUsernameChange.bind(this);\n      this.handleCodeChange = this.handleCodeChange.bind(this);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleUsernameChange(event) {\n      this.setState({username: event.target.value});\n    }\n\n    handleCodeChange(event) {\n        this.setState({gameCode: event.target.value});\n      }\n\n    componentWillReceiveProps(props) {\n      \n        if(props.token) {\n          this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token});\n        }\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        general.joinGame(this.state.username, this.state.gameCode)\n        .then(data => {\n\n            if(data.isValid) {\n                this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n                this.props.passToken(data.individualToken);\n                console.log(data);\n                this.setState({gameCreated: true});    \n\n            } else {\n                alert(data.validMsg)\n            }\n            \n        })\n\n         \n    }\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n            return (\n                <form onSubmit={this.handleSubmit}>\n                  <label>\n                    Enter your Username:\n                    <input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange} />\n                  </label>\n                  <label>\n                    Enter your Game Code:\n                    <input type=\"text\" value={this.state.gameCode} onChange={this.handleCodeChange} />\n                  </label>\n                  <input type=\"submit\" value=\"Submit\" />\n                </form>\n              );\n        } else {\n            return (\n                <div className=\"textLARG\"> You have joined game {this.state.gameCode} </div>\n              );\n        }\n      \n    }\n  }\n\nexport default JoinGameForm\n","export default __webpack_public_path__ + \"static/media/apple.e6f58345.png\";","export default __webpack_public_path__ + \"static/media/grapefruit.56b4ec34.png\";","export default __webpack_public_path__ + \"static/media/original.7364428a.png\";","export default __webpack_public_path__ + \"static/media/peach.4b3916d7.png\";","export default __webpack_public_path__ + \"static/media/plum.848150eb.png\";","export default __webpack_public_path__ + \"static/media/strawberry.e2f74bfd.png\";","export default __webpack_public_path__ + \"static/media/watermelon.816a1fa5.png\";","export default __webpack_public_path__ + \"static/media/lychee.829c269d.png\";","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const LobbyView = props => {\n  \n    const [players, setPlayers] = useState([]);\n    const [token, setToken] = useState(props.token)\n    const history = useHistory();\n\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n\n    const [sojuMap, setSojuMap] = useState({});\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee\n    })\n\n    useEffect(() => {\n\n        if (props.token !== token) {\n            setToken(props.token);        \n        }\n    });\n\n    \n    const startGame = link => {\n        history.push({\n            pathname: \"/\" + link,\n            token:token\n        });\n    }\n\n    useInterval(() => {\n        checkGame()\n    }, 2000);   \n  \n    const soju = name => {\n        if(name == \"Akshin\") {\n            return lychee;\n        }\n\n        return apple;\n    }\n    const checkGame = () => {\n       \n        general.checkGameStarted(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n                    if(data.gameStarted) {\n                        startGame(data.gameLink)\n                    }\n                    setPlayers(data.players)\n                    setSojuMap(data.sojuMap)\n                } else {\n                    console.log(\"Error pinging api\")\n                }\n                \n            })\n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n      }\n\n    return (\n        <div>\n            <div className=\"textLARG\"> Lobby:\n            {/* \n\n            \n            {\n                players.map((player) => {       \n                    return <div className=\"textSMOL\"> {player} </div>\n                })\n            } */}\n            </div>\n\n            <Grid item>\n                <Grid \n                    container \n                    justifyContent=\"center\" \n                    justify = \"center\" \n                    alignItems=\"center\"\n                    spacing={spacing}\n                >\n                {players.map((player) => (\n                    \n                        <Card className=\"cardContainer\"  alignItems=\"center\">\n                            <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                                <img src={sojuToObj[sojuMap[player]]} width=\"80\" height=\"120\"/>         \n\n                                <Typography component=\"div\"  justify = \"center\"  alignItems=\"center\">\n                                    <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" >\n                                        {player}\n                                    </Box>\n                                </Typography>\n                               \n                            </CardContent>\n                        </Card>\n                    \n                ))}\n                </Grid>\n            </Grid>\n       \n\n            \n        </div>\n        \n    );\n\n}\n  \n\nexport default LobbyView\n","import React, { useState, useEffect }  from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport JoinGameForm from \"../components/JoinGameForm\";\nimport LobbyView from \"../components/LobbyView\";\n\nexport const LobbyPage = props => {\n\n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n  \n    return(\n        <body>\n            <Header> </Header>\n            < div className=\"homeContainer\" > \n                <JoinGameForm passToken={handleToken} token={token}/>\n            </div>\n\n            <div className=\"homeContainer\" > \n                <LobbyView token={token}/>\n            </div>\n\n        </body>\n    )\n          \n}\n","import React from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\nimport { Link } from \"react-router-dom\";\n\n\nclass CreateGameForm extends React.Component {\n    constructor(props) {\n\n      \n      super(props);\n\n      console.log(props)\n      if(props.token) {\n        this.state = {username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token};\n\n      } else {\n        this.state = {username: '', gameCreated: false, gameCode: \"\", indToken: \"\"};\n\n      }\n\n      \n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleGuessLink = this.handleGuessLink.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n      \n      if(props.token) {\n        this.setState({username: props.token.split('_')[1], gameCreated: true, gameCode: props.token.split('_')[0], indToken:  props.token});\n      }\n    }\n  \n    handleGuessLink(e) {\n\n        general.startGuessGame(this.state.indToken)\n        .then(data => {\n            if(!data.isValid) {\n                alert(data.validMsg);\n                e.preventDefault();\n\n            }\n        })\n        console.log(\"hey\");\n    }\n    handleChange(event) {\n      this.setState({username: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"hey\");\n        general.createGame(this.state.username)\n        .then(data => {\n            this.setState({gameCode: data.gameToken, indToken: data.individualToken});\n            this.props.passToken(data.individualToken);\n        })\n\n        this.setState({gameCreated: true});    \n    }\n\n\n  \n    render() {\n\n        if(!this.state.gameCreated) {\n            return (\n                <form onSubmit={this.handleSubmit}>\n                  <label>\n                    Enter your Username:\n                    <input type=\"text\" value={this.state.username} onChange={this.handleChange} />\n                  </label>\n                  <input type=\"submit\" value=\"Submit\" />\n                </form>\n              );\n        } else {\n            return (\n                <div>\n                    <div className=\"textLARG\"> Your game code is {this.state.gameCode} </div>\n                    <Link to={{pathname: \"/guessNumberGame\",token:this.state.indToken}} className=\"userContainer\" onClick={(e) => this.handleGuessLink(e)}>\n                        <div className=\"textLARG\">Start Guess Soju Bottle No. Game </div>       \n                    </Link>\n\n                </div>\n                \n              );\n        }\n      \n    }\n  }\n\nexport default CreateGameForm\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Header from \"../components/Header\"\nimport CreateGameForm from \"../components/CreateGameForm\";\nimport LobbyView from \"../components/LobbyView\";\n\nexport const CreateGamePage = props =>{\n  \n    const [token, setToken] = useState(\"\");\n\n    useEffect(() => {\n\n        if(props.location.token) {\n            setToken(props.location.token);\n        }\n      }, []);\n\n    const handleToken = token => {\n        console.log(token);\n        setToken(token);\n    }\n\n    return(\n        <body>\n            <Header/> \n            < div className=\"homeContainer\" > \n                <CreateGameForm passToken={handleToken} token={token}/>\n            </div>\n\n            < div className=\"homeContainer\" > \n                <LobbyView token={token}/>\n            </div>\n        </body>\n    )\n          \n}\n","import axios from \"axios\";\n// import Cookies from 'js-cookie';\n\nclass Guess {\n  constructor() {\n    \n  }\n\n\n    getGuessState(token) {\n        return axios.post('/api/getGuessState', {\n            token: token\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guess(token, guess) {\n        return axios.post('/api/guess', {\n            token: token,\n            guess: guess\n          })\n            .then(res => {\n                  return res.data;\n            })\n            .catch(err => {\n              console.log(err);\n            })\n    \n    }\n\n    guessToLobby(token) {\n      return axios.post('/api/guessToLobby', {\n          token: token\n        })\n          .then(res => {\n                return res.data;\n          })\n          .catch(err => {\n            console.log(err);\n          })\n  \n  }\n  \n\n  \n}\n\nexport default new Guess();\n","import React, { useEffect, useState, useRef } from 'react'\nimport '../StyleSheets/Title.css';\nimport general from '../utils/general';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\n\n\nimport apple from '../soju/apple.png'\nimport grapefruit from '../soju/grapefruit.png'\nimport original from '../soju/original.png'\nimport peach from '../soju/peach.png'\nimport plum from '../soju/plum.png'\nimport strawberry from '../soju/strawberry.png'\nimport watermelon from '../soju/watermelon.png'\nimport lychee from '../soju/lychee.png'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 100,\n      width: 140,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nexport const GuessGameView = props => {\n  \n    const [players, setPlayers] = useState(props.players);\n    const classes = useStyles();\n\n    const [currPlayer, setCurrPlayer] = useState(props.currPlayer);\n    const [highest, setHighest] = useState(props.highest);\n    const [lowest, setLowest] = useState(props.lowest);\n    const [currGuess, setCurrGuess] = useState(props.currGuess);\n    const [sojuMap, setSojuMap] = useState({});\n    const [sojuToObj, setSojuToObj] = useState({\n        'apple': apple,\n        'grapefruit': grapefruit,\n        'original': original,\n        'peach': peach,\n        'plum': plum,\n        'strawberry': strawberry,\n        'watermelon': watermelon,\n        'lychee': lychee\n    })\n\n    useEffect(() => {\n        setPlayers(props.players);\n        setSojuMap(props.sojuMap);\n        setCurrPlayer(props.currPlayer);\n\n        setHighest(props.highest);\n        setLowest(props.lowest);\n        setCurrGuess(props.currGuess);\n        \n\n        console.log(currGuess);\n      }, [props.players, props.sojuMap, props.currPlayer, props.highest, props.lowest, props.currGuess]);\n    \n    return (\n        <div>\n            <div className=\"homeContainer\">\n          \n\n              <Grid item>\n                  <Grid container justifyContent=\"center\" justify = \"center\" spacing={2}>\n                  {players.map((player) => (\n                      \n                      <Card className=\"cardContainer\"  alignItems=\"center\">\n                          <CardContent className = \"cardContentContainer\"  alignItems=\"center\">\n                              <img src={sojuToObj[sojuMap[player]]} width=\"80\" height=\"120\"/>         \n\n                              <Typography component=\"div\"  justify = \"center\"  alignItems=\"center\">\n                                  <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" >\n                                      {player}\n                                  </Box>\n                              </Typography>\n                            \n                          </CardContent>\n                      </Card>\n                  \n              ))}\n                  </Grid>\n              </Grid>\n\n              <Typography  className = { currPlayer ? \"\" : \"hidden\" } component=\"div\"  justify = \"center\"  alignItems=\"center\">\n                <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" >\n                    Current player is {currPlayer}\n                </Box>\n              </Typography>\n\n              <Typography  className = { currGuess[1] ? \"\" : \"hidden\" } component=\"div\"  justify = \"center\"  alignItems=\"center\">\n                <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" >\n                    {currGuess[1]} guessed {currGuess[0]}\n                </Box>\n              </Typography>\n\n              <Typography  className = { currGuess[1] ? \"\" : \"hidden\" } component=\"div\"  justify = \"center\"  alignItems=\"center\">\n                <Box fontWeight=\"fontWeightBold\" m={1} justify = \"center\"alignItems=\"center\" >\n                    Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n                </Box>\n              </Typography>\n            </div> \n            \n        </div>\n        \n    );\n\n}\n  \n\nexport default GuessGameView\n","export default __webpack_public_path__ + \"static/media/gif1.c0a77e8d.gif\";","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nimport Header from \"../components/Header\"\nimport guess from '../utils/guess';\nimport general from '../utils/general';\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport GuessGameView from '../components/GuessGameView';\n\nimport gif from '../gifs/gif1.gif'\n\n  \n\nexport const GuessNumberGame = props => {\n\n    const history = useHistory();\n\n    const [token, setToken] = useState(props.location.token);\n    const [show, setShow] = useState(false);\n    const [loserShow, setLoserShow] = useState(false);\n    const [loser, setLoser] = useState(\"\");\n\n    const [host, setHost] = useState(false);\n\n    const [name, setName] = useState(\"\");\n\n\n    const [highest, setHighest] = useState(100);\n    const [lowest, setLowest] = useState(0);\n    const [numGuess, setNumGuess] = useState(0);\n    const [currGuess, setCurrGuess] = useState([0, \"\"]);\n    const [guessError, setGuessError] = useState(false);\n\n    const [players, setPlayers] = useState([]);\n    const [sojuMap, setSojuMap] = useState({});\n    const [currPlayer, setCurrPlayer] = useState(\"\");\n\n    \n   \n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const closeGif = () => setLoserShow(false);\n\n    useEffect(() => {\n\n        if(token) {\n            setName(token.split(\"_\")[1])\n        }\n\n        general.isHost(token) \n        .then(data => {\n\n            if(data) {\n                if(data.isHost) {\n                    setHost(true);\n                }\n            } else {\n                console.log(\"error pinging api\")\n            }\n            \n        })\n      }, []);\n\n    useInterval(() => {\n        checkGame()\n    }, 2000);   \n  \n    const checkGame = () => {\n       \n        guess.getGuessState(token)\n            .then(data => {\n                console.log(data)\n\n                if(data) {\n\n                    if(data.currGuess != currGuess[0]) {\n                        setCurrGuess([data.currGuess, currPlayer]);\n                    }\n\n                    console.log(currGuess);\n                    setHighest(data.highestGuess);\n                    setLowest(data.lowestGuess);\n\n                    setPlayers(data.players);\n                   \n                    \n                    setCurrPlayer(data.currPlayer);\n\n                    setSojuMap(data.sojuMap);\n                    if(data.yourTurn && !data.gameOver) {\n                        handleShow();\n                    }\n\n                    if(data.gameOver) {\n                        setLoser(data.currPlayer);\n                        setLoserShow(true);\n                    }\n\n                    if(data.link) {\n                        history.push({\n                            pathname: \"/\" + data.link,\n                            token:token\n                        });\n\n                    }\n                } else {\n                    console.log(\"error pinging api\")\n                }\n\n            })\n                \n    };\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n      \n        // Remember the latest callback.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n    function handleGuess(e) {\n        e.preventDefault();\n        \n        console.log(numGuess);\n\n        if(numGuess >= highest || numGuess <= lowest) {\n            setGuessError(true);\n        } else {\n            handleClose();\n            guess.guess(token, numGuess)\n            .then(data => {\n            })\n            \n        }\n    }\n\n    function handleBackToLobby(e) {\n\n        guess.guessToLobby(token);\n        \n    }\n\n    \n    return(\n        <body>\n            <Header> </Header>\n            <div className=\"textLARG\"> Guess Number Game </div>\n\n            <div className=\"textLARG\"> Hello {name} </div>\n\n            <GuessGameView players = {players} sojuMap = {sojuMap} currPlayer = {currPlayer} highest = {highest} lowest = {lowest} currGuess = {currGuess}/>\n\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header>\n                    <Modal.Title>Enter Guess</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    \n\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" hasValidation>\n                            <Form.Label>Enter your number guess</Form.Label>\n                            <Form.Control type=\"number\" placeholder=\"Enter number\" value ={numGuess} onChange={e => setNumGuess(e.target.value)} />\n                            <div className = { guessError ? \"errorInput\" : \"hidden\"} >\n                                Please choose a number in between the lowest and highest guesses<br/>\n                            </div>\n                            <Form.Text className=\"text-muted\">\n                               Lowest Guess: {lowest}<br/> Highest Guess: {highest}\n                            </Form.Text>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleGuess(e)}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n               \n                </Modal.Footer>\n            </Modal>\n\n\n            <Modal\n                show={loserShow}\n                backdrop=\"static\"    \n            >\n                <Modal.Header>\n                    <Modal.Title>DRINKING TIME</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <div className = \"center\">\n                        <div className = \"textSMOL\" >\n                            {loser} guessed {currGuess[0]} <br/>\n                            {loser} drinks!\n                        </div> \n\n                        <img src={gif}/>         \n                    </div>          \n                   \n                    <div className = {host ? \"center\" : \"hidden\"}>\n                        <Link to={{pathname: \"/createGame\", token: token}} className=\"userContainer\" onClick={(e) => handleBackToLobby(e)}>\n                            <div className=\"textLARG\">Back to Lobby </div>       \n                        </Link>\n\n                    </div>\n                            \n                    \n                    \n                </Modal.Body>\n                <Modal.Footer>\n                </Modal.Footer>\n            </Modal>\n        </body>\n    )\n        \n    \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport './index.css';\nimport { HomePage } from \"./pages/HomePage\";\nimport  {LobbyPage}  from \"./pages/LobbyPage\";\nimport  {CreateGamePage}  from \"./pages/CreateGamePage\";\n\nimport  {GuessNumberGame}  from \"./pages/GuessNumberGame\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/lobby\" component={LobbyPage} />\n        <Route exact path=\"/createGame\" component={CreateGamePage} />\n\n        <Route exact path=\"/guessNumberGame\" component={GuessNumberGame} />\n\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}